{"version":3,"sources":["./src/app/adminTheatrePages/adminTheatre.module.ts","./src/app/adminTheatrePages/adminTheatre.routing.ts","./src/app/adminTheatrePages/currencies/currencies.service.ts","./src/app/adminTheatrePages/dashboard/dashboard-resolver.service.ts","./src/app/adminTheatrePages/dashboard/dashboard.component.ts","./src/app/adminTheatrePages/dashboard/dashboard.component.html","./src/app/adminTheatrePages/profile/edit-profile/edit-profile.component.ts","./src/app/adminTheatrePages/profile/edit-profile/edit-profile.component.html","./src/app/adminTheatrePages/purchases/all-purchases/all-purchases-resolver.service.ts","./src/app/adminTheatrePages/purchases/all-purchases/all-purchases.component.ts","./src/app/adminTheatrePages/purchases/all-purchases/all-purchases.component.html","./src/app/adminTheatrePages/purchases/purchases.module.ts","./src/app/adminTheatrePages/repertoire/add-repertoire/add-repertoire.component.ts","./src/app/adminTheatrePages/repertoire/add-repertoire/add-repertoire.component.html","./src/app/adminTheatrePages/repertoire/all-repertoires/all-repertoires-resolver.service.ts","./src/app/adminTheatrePages/repertoire/all-repertoires/all-repertoires.component.ts","./src/app/adminTheatrePages/repertoire/all-repertoires/all-repertoires.component.html","./src/app/adminTheatrePages/repertoire/edit-repertoire/edit-repertoire.component.ts","./src/app/adminTheatrePages/repertoire/edit-repertoire/edit-repertoire.component.html","./src/app/adminTheatrePages/repertoire/repertoires.module.ts","./src/app/adminTheatrePages/repertoire/repertoires.routing.ts","./src/app/adminTheatrePages/repertoire/repertoires.service.ts","./src/app/adminTheatrePages/scenes/add-scene/add-scene.component.ts","./src/app/adminTheatrePages/scenes/add-scene/add-scene.component.html","./src/app/adminTheatrePages/scenes/all-scenes/all-scenes-resolver.service.ts","./src/app/adminTheatrePages/scenes/all-scenes/all-scenes.component.ts","./src/app/adminTheatrePages/scenes/all-scenes/all-scenes.component.html","./src/app/adminTheatrePages/scenes/edit-scene/edit-scene.component.ts","./src/app/adminTheatrePages/scenes/edit-scene/edit-scene.component.html","./src/app/adminTheatrePages/scenes/scenes.module.ts","./src/app/adminTheatrePages/scenes/scenes.routing.ts","./src/app/adminTheatrePages/scenes/scenes.service.ts","./src/app/adminTheatrePages/shows/add-show/add-show.component.ts","./src/app/adminTheatrePages/shows/add-show/add-show.component.html","./src/app/adminTheatrePages/shows/all-shows/all-shows-resolver.service.ts","./src/app/adminTheatrePages/shows/all-shows/all-shows.component.ts","./src/app/adminTheatrePages/shows/all-shows/all-shows.component.html","./src/app/adminTheatrePages/shows/edit-show/edit-show.component.ts","./src/app/adminTheatrePages/shows/edit-show/edit-show.component.html","./src/app/adminTheatrePages/shows/shows.module.ts","./src/app/adminTheatrePages/shows/shows.routing.ts","./src/app/adminTheatrePages/shows/shows.service.ts","./src/app/adminTheatrePages/theatre/edit-theatre/edit-theatre.component.ts","./src/app/adminTheatrePages/theatre/edit-theatre/edit-theatre.component.html","./src/app/adminTheatrePages/theatre/theatre.service.ts","./src/app/globalFrontendComponents/Categories/Categories.service.ts","./src/app/services/show-followers.service.ts"],"names":[],"mappings":"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","file":"src_app_adminTheatrePages_adminTheatre_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ShowsModule } from './shows/shows.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AdminTheatreRoutes } from './adminTheatre.routing';\r\nimport { TheatreDashboardComponent } from './dashboard/dashboard.component';\r\nimport { ScenesModule } from './scenes/scenes.module';\r\nimport { RepertoiresModule } from './repertoire/repertoires.module';\r\nimport { PurchasesModule } from './purchases/purchases.module';\r\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\r\nimport { EditTheatreComponent } from './theatre/edit-theatre/edit-theatre.component';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AdminTheatreRoutes),\r\n    ShowsModule,\r\n    ScenesModule,\r\n    RepertoiresModule,\r\n    ReactiveFormsModule,\r\n    NgxDropzoneModule,\r\n    PurchasesModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    TheatreDashboardComponent,\r\n    EditProfileComponent,\r\n    EditTheatreComponent\r\n  ]\r\n})\r\nexport class AdminTheatreModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { TheatreDashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditProfileComponent } from './profile/edit-profile/edit-profile.component';\r\nimport { EditTheatreComponent } from './theatre/edit-theatre/edit-theatre.component';\r\nimport { AllPurchasesComponent } from './purchases/all-purchases/all-purchases.component';\r\nimport { AllPurchasesResolverService } from './purchases/all-purchases/all-purchases-resolver.service';\r\nimport { DashboardResolverService } from './dashboard/dashboard-resolver.service';\r\nexport const AdminTheatreRoutes: Routes = [\r\n  {\r\n    path: 'dashboard',\r\n    component: TheatreDashboardComponent,\r\n    resolve: { data: DashboardResolverService }\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: EditProfileComponent\r\n  },\r\n  {\r\n    path: 'reservations',\r\n    component: AllPurchasesComponent,\r\n    resolve: { purchaseList: AllPurchasesResolverService }\r\n  },\r\n  {\r\n    path: 'repertoire',\r\n    loadChildren: () => import('./repertoire/repertoires.module').then(m => m.RepertoiresModule)\r\n  },\r\n  {\r\n    path: 'scenes',\r\n    loadChildren: () => import('./scenes/scenes.module').then(m => m.ScenesModule)\r\n  },\r\n  {\r\n    path: 'shows',\r\n    loadChildren: () => import('./shows/shows.module').then(m => m.ShowsModule)\r\n  },\r\n  {\r\n    path: 'theatre',\r\n    component: EditTheatreComponent\r\n  }\r\n]\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\nimport { Currency } from './currency.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrenciesService {\r\n\r\n  private API_URL = API_URL;\r\n  \r\nconstructor(private httpClient: HttpClient) { }\r\n\r\ngetCurrencyList(): Observable<Currency[]>{\r\n  return this.httpClient.get<Currency[]>(this.API_URL + '/currencies')\r\n    .pipe(\r\n      map((currency: Currency[]) => currency),\r\n      catchError(err => throwError(err))\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { PopularShowsVerticalService } from 'src/app/globalFrontendComponents/PopularShowsVertical/PopularShowsVertical.service';\r\nimport { ShowFollowersService } from 'src/app/services/show-followers.service';\r\nimport { PurchasesService } from '../purchases/purchases.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardResolverService implements Resolve<any>{\r\n\r\n  theatreId: any;\r\n\r\nconstructor(private popularShowsService: PopularShowsVerticalService,\r\n  private token: TokenStorageService,\r\n  private showFollowersService: ShowFollowersService,\r\n  private purchasesService: PurchasesService) {\r\n   }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    this.theatreId = this.token.getTheatreId();\r\n    return forkJoin([this.showFollowersService.getShowFollowersFilteredByTheatre(this.theatreId),\r\n      this.purchasesService.getPurchasesNumberFilteredByTheatre(this.theatreId),\r\n      this.popularShowsService.getPopularShowsFilteredByTheatre(this.theatreId),\r\n      this.purchasesService.getRecentPurchasesFilteredByTheatre(this.theatreId)])\r\n        .pipe(\r\n          map(data => {\r\n            return { \r\n              'showFollowers': data[0],\r\n              'soldTicketsNumber': data[1],\r\n              'popularShows': data[2],\r\n              'recentPurchases': data[3]\r\n            }\r\n          })\r\n        )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { IMG_BASE_URL } from 'src/app/app.constants';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { PopularShows } from 'src/app/globalFrontendComponents/PopularShows/PopularShows.model';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\nimport { TheatresService } from 'src/app/theatres/theatres.service';\r\n@Component({\r\n  selector: 'dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class TheatreDashboardComponent implements OnInit {\r\n\r\n  theatreId: number;\r\n  shows: PopularShows[];\r\n  readonly IMG_BASE_URL = IMG_BASE_URL;\r\n  showFollowers: number;\r\n  soldTicketsNumber: number;\r\n  recentPurchases: any;\r\n\r\n  isRepertoireAdded: boolean = false;\r\n  subscription: Subscription;\r\n  isTheatreVisible: boolean;\r\n  isSceneAdded: boolean;\r\n  isShowAdded: boolean;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n    private theatreService: TheatresService,\r\n    private token: TokenStorageService,\r\n    private checkIsTheatreDataAddeedService: CheckIsTheatreDataAddeedService) {\r\n      this.checkIsTheatreDataAddeedService.currentTheatreVisibilityStatus$.subscribe(\r\n        data => {\r\n          this.isTheatreVisible = data;\r\n        }\r\n      )\r\n      this.checkIsTheatreDataAddeedService.currentSceneAddedStatus$.subscribe(\r\n        data => {\r\n          this.isSceneAdded = data;\r\n        }\r\n      )\r\n      this.checkIsTheatreDataAddeedService.currentShowAddedStatus$.subscribe(\r\n        data => {\r\n          this.isShowAdded = data;\r\n        }\r\n      )\r\n      this.checkIsTheatreDataAddeedService.currentRepertoireStatus$.subscribe(\r\n        data => {\r\n          this.isRepertoireAdded = data;\r\n        }\r\n      )\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((data: any) => {\r\n      this.shows = data.data.popularShows,\r\n      this.showFollowers = data.data.showFollowers,\r\n      this.soldTicketsNumber = data.data.soldTicketsNumber,\r\n      this.recentPurchases = data.data.recentPurchases\r\n    });  \r\n    \r\n    let theatreId = this.token.getTheatreId();\r\n     this.theatreService.getTheatre(theatreId)\r\n      .subscribe(data => {\r\n         this.isTheatreVisible = data.isVisible;\r\n         if(Object.keys(data.getSceneWithSectorsDtos).length != 0)\r\n            this.isSceneAdded = true;\r\n         if(Object.keys(data.showBaseInfoDtos).length != 0)\r\n            this.isShowAdded = true;\r\n         if(Object.keys(data.getRepertoireForTheatreDtos).length != 0)\r\n            this.isRepertoireAdded = true;\r\n      })\r\n  }\r\n\r\n}\r\n","<div class=\"dashboard-content\" *ngIf=\"isRepertoireAdded\">\r\n  <!-- Content -->\r\n  <div class=\"row\">\r\n    <!-- Item -->\r\n    <div class=\"col-lg-6 col-md-6\">\r\n      <div class=\"card   mb-4\">\r\n        <div class=\"card-body text-center\">\r\n          <i class=\"i-Add-User\"></i>\r\n          <div class=\"py-4\">\r\n            <h2 class=\"text-primary mb-2\">{{ soldTicketsNumber }}</h2>\r\n            <p class=\"text-muted mt-2 mb-0\" *ngIf=\"soldTicketsNumber != 1\">Tickets Reserved</p>\r\n            <p class=\"text-muted mt-2 mb-0\" *ngIf=\"soldTicketsNumber == 1\">Ticket Reserved</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Item -->\r\n    <div class=\"col-lg-6 col-md-6\">\r\n      <div class=\"card   mb-4\">\r\n        <div class=\"card-body text-center\">\r\n          <i class=\"i-Add-User\"></i>\r\n          <div class=\"py-4\">\r\n            <h2 class=\"text-primary mb-2\">{{ showFollowers }}</h2>\r\n            <p class=\"text-muted mt-2 mb-0\" *ngIf=\"showFollowers != 1\">Show Followers</p>\r\n            <p class=\"text-muted mt-2 mb-0\" *ngIf=\"showFollowers == 1\">Show Follower</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!-- Recent Activity -->\r\n    <div class=\"col-lg-6 col-md-12 mb-4\" *ngIf=\"recentPurchases.length > 0\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile\">\r\n          <h4>Recent Reservations</h4>\r\n        </div>\r\n        <div class=\"db-activities\">\r\n          <div class=\"alert alert-dismissible fade show\" role=\"alert\" *ngFor=\"let purchase of recentPurchases\">\r\n            <img src=\"assets/images/tick.png\" class=\"img-fluid rounded-circle shadow-lg\" width=\"50\" height=\"50\" alt=\"\">\r\n            <span class=\"alert-inner--text mb-0 px-3\">Ticket reserved on {{ purchase.createdAt | date: 'd MMMM yyyy' }}\r\n              for\r\n              <a [routerLink]=\"['/repertoires/about-play', purchase.repertoireId ]\">{{ purchase.showName }}</a>\r\n              show that will be on view {{ purchase.date | date: 'd MMMM yyyy' }} at {{ purchase.date | date: 'HH:mm'\r\n              }}.\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-6 mb-4\" *ngIf=\"shows.length > 0\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile \">\r\n          <h4>Popular Shows</h4>\r\n        </div>\r\n        <div class=\"db-activities p-4\">\r\n          <div class=\"d-flex align-items-center border-bottom pb-3 mb-3\" *ngFor=\"let popularShow of shows\">\r\n            <div *ngFor=\"let image of popularShow.showImage\">\r\n              <a [routerLink]=\"['/shows/about-show', popularShow.id ]\">\r\n                <img class=\"rounded\" src=\"{{ IMG_BASE_URL + image.path }}\" alt=\"image.alt\" width=\"90\" height=\"60\">\r\n              </a>\r\n            </div>\r\n            <div class=\"flex-grow-1 px-3\">\r\n              <h6 class=\"m-0\"><a [routerLink]=\"['/shows/about-show', popularShow.id ]\"> {{ popularShow.title }}</a></h6>\r\n              <p class=\"m-0 text-small text-muted\">\r\n                <span *ngIf=\"popularShow.followersNumber == 1\"> {{popularShow.followersNumber}} follower</span>\r\n                <span *ngIf=\"popularShow.followersNumber != 1\"> {{popularShow.followersNumber}} followers</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"dashboard-content\" *ngIf=\"!isRepertoireAdded\">\r\n  <!-- Content -->\r\n  <div class=\"row\">\r\n    <!-- Item -->\r\n    <div class=\"col-lg-12 col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <i class=\"i-Add-User\"></i>\r\n          <div class=\"py-4\">\r\n            <h4 class=\"text-primary mb-2\">In order to fully activate your profile please complete the following steps:\r\n            </h4>\r\n            <ol class=\"text-muted mb-0\">\r\n              <li class=\"mt-4\">Add your theatre info\r\n                <span *ngIf=\"isTheatreVisible\">\r\n                  <img src=\"assets/images/tick.png\" class=\"img-fluid rounded-circle shadow-lg\" width=\"35\" height=\"35\"\r\n                    alt=\"\">\r\n                </span>\r\n              </li>\r\n              <li class=\"mt-4\">Add scenes with sector details\r\n                <span *ngIf=\"isSceneAdded\">\r\n                  <img src=\"assets/images/tick.png\" class=\"img-fluid rounded-circle shadow-lg\" width=\"35\" height=\"35\"\r\n                    alt=\"\">\r\n                </span>\r\n              </li>\r\n              <li class=\"mt-4\">Add shows\r\n                <span *ngIf=\"isShowAdded\">\r\n                  <img src=\"assets/images/tick.png\" class=\"img-fluid rounded-circle shadow-lg\" width=\"35\" height=\"35\"\r\n                    alt=\"\">\r\n                </span>\r\n              </li>\r\n              <li class=\"mt-4\">Add repertoire\r\n                <span *ngIf=\"isRepertoireAdded\">\r\n                  <img src=\"assets/images/tick.png\" class=\"img-fluid rounded-circle shadow-lg\" width=\"35\" height=\"35\"\r\n                    alt=\"\">\r\n                </span>\r\n              </li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Form, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.scss']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n}\r\n","<div class=\"dashboard-content\">\r\n    <profile></profile>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IPurchaseData } from 'src/app/shared/interfaces/IPurchaseData';\r\nimport { PurchasesService } from '../purchases.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllPurchasesResolverService implements Resolve<IPurchaseData> {\r\n\r\nconstructor(private purchaseService: PurchasesService) { }\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<IPurchaseData> {\r\n    return this.purchaseService.getPurchasesFilteredByTheatre();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SidebarLayoutTwoComponent } from 'src/app/listing/SidebarLayoutTwo/SidebarLayoutTwo.component';\r\nimport { IPurchaseData } from 'src/app/shared/interfaces/IPurchaseData';\r\nimport { Purchase } from '../purchase.model';\r\nimport { PurchasesService } from '../purchases.service';\r\n\r\n@Component({\r\n  selector: 'app-all-purchases',\r\n  templateUrl: './all-purchases.component.html',\r\n  styleUrls: ['./all-purchases.component.scss']\r\n})\r\nexport class AllPurchasesComponent implements OnInit {\r\n\r\n  purchases: Purchase[];\r\n  totalCount: number;\r\n  itemsPerPage: any;\r\n  currentPage: number = 1;\r\n  totalItems: any;\r\n\r\n  p: number = 1;\r\n  size: number = 4;\r\n  pageSizes: Array<number> = [4, 8, 12];\r\n\r\n  @ViewChild(SidebarLayoutTwoComponent) searchItem;\r\n  @ViewChild(SidebarLayoutTwoComponent) sortItems;\r\n\r\n  searchPurchase: string;\r\n  sortPurchases: string;\r\n\r\n  purchaseId: number;\r\n \r\n  constructor(private purchaseService: PurchasesService,\r\n    private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((data: {purchaseList: IPurchaseData}) => {\r\n      this.purchases = data.purchaseList.data,\r\n      this.totalCount = data.purchaseList.totalCount\r\n    });\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.size = event.target.value;\r\n  \r\n    this.purchaseService.getPurchasesFilteredByTheatre(this.size, this.p, this.searchPurchase, this.sortPurchases)\r\n    .subscribe(data => {\r\n      if(data.data.length == 0){\r\n        this.purchaseService.getPurchasesFilteredByTheatre(this.size, this.p = 1, this.searchPurchase, this.sortPurchases)\r\n          .subscribe(data => {\r\n            this.purchases = data.data,\r\n            this.totalCount = data.totalCount\r\n          })\r\n      }\r\n      this.purchases = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n    this.purchaseService.getPurchasesFilteredByTheatre(this.size, this.p, this.searchPurchase, this.sortPurchases)\r\n    .subscribe(data => {\r\n      this.purchases = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSearchItems(searchTerm: string) : void {\r\n    this.searchPurchase = searchTerm;\r\n\r\n    this.purchaseService.getPurchasesFilteredByTheatre(this.size, this.p = 1, this.searchPurchase, this.sortPurchases)\r\n    .subscribe(data => {\r\n      this.purchases = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSortItems(sortOrder: string) : void{\r\n    this.sortPurchases = sortOrder;\r\n\r\n    this.purchaseService.getPurchasesFilteredByTheatre(this.size, this.p = 1, this.searchPurchase, this.sortPurchases)\r\n    .subscribe(data => {\r\n      this.purchases = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onResetItems(value){\r\n    if(value == true){\r\n      this.purchaseService.getPurchasesFilteredByTheatre(this.size, 1, '', '')\r\n      .subscribe(data => {\r\n        this.purchases = data.data,\r\n        this.totalCount = data.totalCount\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row responsive-row\">\r\n    <!-- Sidebar -->\r\n    <div class=\"col-lg-12 col-md-4\">\r\n      <sidebar-layout-two (searchItem)=\"onSearchItems($event)\" (sortItems)=\"onSortItems($event)\"\r\n        (resetItems)=\"onResetItems($event)\"></sidebar-layout-two>\r\n    </div>\r\n    <!-- Sidebar / End -->\r\n\r\n    <!-- Listings -->\r\n    <div class=\"col-lg-12 col-md-12\" *ngIf=\"purchases.length > 0; else noResults\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile\">\r\n          <h4>Reservations</h4>\r\n        </div>\r\n        <div class=\"dashboard-list-box table-responsive invoices with-icons\">\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Show</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Sector</th>\r\n                <th>Row</th>\r\n                <th>Seat</th>\r\n                <th>Price</th>\r\n                <th>Reserved at</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"col-sm-6 col-md-6 col-lg-6\" *ngFor=\"let purchase of purchases | paginate: \r\n        {\r\n           itemsPerPage: size,\r\n           currentPage: p,\r\n           totalItems: totalCount \r\n        }; \r\n        let i = index\">\r\n                <td>{{ size*(p-1)+i+1 }}</td>\r\n                <td><a [routerLink]=\"['/repertoires/about-play', purchase.repertoireId]\">{{ purchase.showName }}</a>\r\n                </td>\r\n                <td> {{ purchase.date | date: 'd MMMM yyyy' }} </td>\r\n                <td> {{ purchase.date | date: 'HH:mm' }} </td>\r\n                <td> {{ purchase.sectorName }} </td>\r\n                <td> {{ purchase.rowNumber }} </td>\r\n                <td> {{ purchase.seatNumber }} </td>\r\n                <td> {{ purchase.getPriceBasicDtos[0].price }} {{ purchase.getPriceBasicDtos[0].currencyName }}</td>\r\n                <td> {{ purchase.createdAt | date: 'd MMMM yyyy' }} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-12 col-md-12\">\r\n        <div class=\"row\">\r\n          <!-- Pagination -->\r\n          <div class=\"col-lg-6 col-md-6\">\r\n            <pagination-controls (pageChange)=\"handlePageChange($event)\" previousLabel=\"Prev\" nextLabel=\"Next\"\r\n              responsive=\"true\" directionLinks=\"true\"></pagination-controls>\r\n          </div>\r\n          <!-- Pagination / End -->\r\n          <!-- Items per page -->\r\n          <div class=\"col-lg-6 col-md-6 text-right\">\r\n            Items per Page:\r\n            <select (change)=\"handlePageSizeChange($event)\">\r\n              <option *ngFor=\"let size of pageSizes\" value=\"{{ size }}\">\r\n                {{ size }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <!-- Items per page / End -->\r\n        </div>\r\n      </div>\r\n      <!-- Listings / End -->\r\n    </div>\r\n  </div>\r\n  <ng-template #noResults>\r\n    <div class=\"col-lg-9 col-md-8\">\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-6 col-md-12 grid-layout-list\">\r\n          No results found.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AllPurchasesComponent } from './all-purchases/all-purchases.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    NgxPaginationModule\r\n  ],\r\n  declarations: [AllPurchasesComponent]\r\n})\r\nexport class PurchasesModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ShowsService } from '../../shows/shows.service';\r\nimport { ShowListForRepertoire } from '../../shows/ShowListForRepertoire.model';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Currency } from '../../currencies/currency.model';\r\nimport { CurrenciesService } from '../../currencies/currencies.service';\r\nimport { ShowForRepertoire } from '../../shows/showForRepertoire.model';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { ConvertDateService } from 'src/app/shared/services/convert-date.service';\r\nimport { RepertoiresService } from '../repertoires.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { Router } from '@angular/router';\r\nimport { IS_PREMIERE } from '../../../app.constants';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-add-repertoire',\r\n  templateUrl: './add-repertoire.component.html',\r\n  styleUrls: ['./add-repertoire.component.scss']\r\n})\r\nexport class AddRepertoireComponent implements OnInit {\r\n\r\n  showListing: ShowListForRepertoire[];\r\n  currencyListing: Currency[];\r\n  repertoireForm: FormGroup;\r\n  isSubmitted: boolean = false;\r\n  selectedShow: boolean = false;\r\n  theatreId: any;\r\n  isPremiere = IS_PREMIERE;\r\n\r\n  minDate: any;\r\n\r\n  constructor(private showService: ShowsService,\r\n    private currencyService: CurrenciesService,\r\n    private fb: FormBuilder,\r\n    private token: TokenStorageService,\r\n    private convertDateService: ConvertDateService,\r\n    private repertoireService: RepertoiresService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private checkIsTheatreDataAddeedService: CheckIsTheatreDataAddeedService) {\r\n      this.minDate = this.convertDateService.getMinDateTime();\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.showService.getShowsForRepertoireFilteredByTheatre()\r\n      .subscribe(data => {\r\n        this.showListing = data\r\n      });\r\n\r\n    this.currencyService.getCurrencyList()\r\n      .subscribe(data => {\r\n        this.currencyListing = data\r\n      })\r\n\r\n    this.theatreId = this.token.getTheatreId();\r\n\r\n    this.repertoireForm = this.fb.group({\r\n      id: 0,\r\n      showId: ['', Validators.required],\r\n      showDate: ['', Validators.required],\r\n      sceneName: [''],\r\n      isPremiere: [''],\r\n      addPriceDtos: this.fb.array([this.initialSectorRows()])\r\n    });\r\n  }\r\n\r\n  initialSectorRows(){\r\n    return this.fb.group({\r\n      sectorId: [''],\r\n      sectorName: [''],\r\n      ticketPrice: ['', Validators.required],\r\n      currencyId: ['']\r\n    });\r\n  }\r\n\r\n  onChangeObj($event){\r\n    this.selectedShow = true;\r\n    this.showService.getShowForRepertoire($event)\r\n      .subscribe((data: ShowForRepertoire[]) => {\r\n          this.displayShowData(data)\r\n        }\r\n      )\r\n  }\r\n\r\n  displayShowData(data){\r\n    this.repertoireForm.patchValue({\r\n      sceneName: data.scene,\r\n      isPremiere: false,\r\n    }),\r\n    this.repertoireForm.setControl('addPriceDtos', this.setExistingSectors(data.getSectorDtos))\r\n  }\r\n\r\n  setExistingSectors(sectorSets) : FormArray {\r\n    const sectorFormArray = new FormArray([]);\r\n    sectorSets.forEach(s => {\r\n      sectorFormArray.push(this.fb.group({\r\n        sectorName: s.sectorName,\r\n        sectorId: s.id,\r\n        ticketPrice: null,\r\n        currencyId: 2\r\n      }));\r\n    });\r\n    return sectorFormArray;\r\n  }\r\n\r\n  //Getter methods to access formControls\r\n  get showId() { return this.repertoireForm.get('showId'); }\r\n  get showDate() { return this.repertoireForm.get('showDate'); }\r\n  get premiere() { return this.repertoireForm.get('isPremiere'); }\r\n\r\n  get sectorControls(){\r\n    return (<FormArray>this.repertoireForm.controls.addPriceDtos['controls']);\r\n  }\r\n\r\n  \r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n\r\n    if(!this.repertoireForm.valid){\r\n      return false;\r\n    }\r\n\r\n    let showId = this.repertoireForm.get('showId').value;\r\n    \r\n    const formData = new FormData();\r\n\r\n    var showDate = this.repertoireForm.get('showDate').value;\r\n    var showDateTime = this.convertDateService.convertDate(showDate);\r\n\r\n    formData.append('ShowId', this.repertoireForm.get('showId').value);\r\n    formData.append('TheatreId', this.theatreId);\r\n    formData.append('ShowDate', showDateTime);\r\n    formData.append('IsPremiere', this.repertoireForm.get('isPremiere').value);\r\n\r\n    const prices = this.repertoireForm.get('addPriceDtos').value;\r\n\r\n    for(let i = 0; i < prices.length; i++){\r\n      formData.append('AddPriceDtos[' + i + '][SectorId]', prices[i].sectorId);\r\n      formData.append('AddPriceDtos[' + i + '][TicketPrice]', prices[i].ticketPrice);\r\n      formData.append('AddPriceDtos[' + i + '][CurrencyId]', prices[i].currencyId)\r\n    }\r\n\r\n    //new Response(formData).text().then(console.log);\r\n\r\n    this.repertoireService.addRepertoire(formData)\r\n      .subscribe(() =>{\r\n        this.alertify.success(\"Sucessfully added.\"),\r\n        this.checkIsTheatreDataAddeedService.changeRerertoireAddedStatus(true);\r\n        this.router.navigate(['/admin-theatre/repertoire/all-repertoires'])\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Add Play on Repertoire</h3>\r\n          </div>\r\n          <!-- Title -->\r\n          <form [formGroup]=\"repertoireForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <label for=\"showId\">Show: </label>\r\n                <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"showId\"\r\n                  aria-placeholder=\"Show\" (ngModelChange)=\"onChangeObj($event)\">\r\n                  <option value=\"\" disabled>Select show</option>\r\n                  <option *ngFor=\"let show of showListing\" [value]=\"show.id\">\r\n                    {{ show.title }}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"isSubmitted && showId.errors?.required\" class=\"text-warning small\">\r\n                  Show is required.\r\n                </div>\r\n              </div>\r\n              <!-- Show Date -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"showDate\">Show Date and Time: </label>\r\n                  <input type=\"datetime-local\" placeholder=\"Show Date\" formControlName=\"showDate\"\r\n                    class=\"form-control form-control-alternative\" min=\"{{ minDate }}\">\r\n                  <div *ngIf=\"showDate.invalid && (showDate.dirty || showDate.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"showDate.errors.required\">\r\n                      Show date and time details are required.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Scene -->\r\n            <div *ngIf=\"selectedShow\">\r\n              <div class=\"row with-forms\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"sceneName\">Scene: </label>\r\n                  <input type=\"text\" placeholder=\"Scene name\" formControlName=\"sceneName\" readonly\r\n                    class=\"form-control form-control-alternative\">\r\n                </div>\r\n                <!-- Premiere -->\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"isPremiere\">Premiere: </label>\r\n                  <select formControlName=\"isPremiere\" class=\"custom-select form-control-alternative mb-1\"\r\n                    aria-placeholder=\"Premiere\">\r\n                    <option value=\"\" disabled>Select Premiere Status</option>\r\n                    <option *ngFor=\"let premiere of isPremiere\" [value]=\"premiere.id\">\r\n                      {{ premiere.value }}\r\n                    </option>\r\n                  </select>\r\n                  <div *ngIf=\"isSubmitted && premiere.errors?.required\" class=\"text-warning small\">\r\n                    Premiere status is required.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Sectors with Prices -->\r\n              <div formArrayName=\"addPriceDtos\" *ngFor=\"let sectorRow of sectorControls; let i= index\">\r\n                <div class=\"row with-forms\" [formGroupName]='i'>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"sectorId\">Sector: </label>\r\n                    <input type=\"hidden\" formControlName=\"sectorId\">\r\n                    <input type=\"text\" formControlName=\"sectorName\" placeholder=\"Sector Name\" readonly\r\n                      class=\"form-control form-control-alternative\">\r\n                  </div>\r\n                  <!-- Price -->\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"ticketPrice\">Price: </label>\r\n                      <input type=\"text\" placeholder=\"Ticket Price\" required formControlName=\"ticketPrice\"\r\n                        class=\"form-control form-control-alternative\">\r\n                    </div>\r\n                    <div *ngIf=\"isSubmitted && sectorControls[i].get('ticketPrice').hasError('required')\"\r\n                      class=\"text-warning small\">\r\n                      Price is required.\r\n                    </div>\r\n                  </div>\r\n                  <!-- Currency -->\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"currencyId\">Currency: </label>\r\n                      <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"currencyId\"\r\n                        aria-placeholder=\"Currency\" required>\r\n                        <option value=\"\" disabled>Select currency</option>\r\n                        <option *ngFor=\"let currency of currencyListing\" [value]=\"currency.id\">\r\n                          {{ currency.currencyName }}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"isSubmitted && sectorControls[i].get('currencyId').hasError('required')\"\r\n                        class=\"text-warning small\">\r\n                        Currency is required.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/repertoire/all-repertoires']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { IRepertoireData } from 'src/app/shared/interfaces/IRepertoireData';\r\nimport { RepertoiresService } from '../repertoires.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AllRepertoiresResolverService implements Resolve<IRepertoireData> {\r\n\r\nconstructor(private repertoireService: RepertoiresService) { }\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IRepertoireData> {\r\n    return this.repertoireService.getRepertoiresFilteredByTheatre();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SidebarLayoutTwoComponent } from 'src/app/listing/SidebarLayoutTwo/SidebarLayoutTwo.component';\r\nimport { RepertoiresService } from '../repertoires.service';\r\nimport { Repertoire } from '../repertoire.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { IRepertoireData } from 'src/app/shared/interfaces/IRepertoireData';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-all-repertoires',\r\n  templateUrl: './all-repertoires.component.html',\r\n  styleUrls: ['./all-repertoires.component.scss']\r\n})\r\nexport class AllRepertoiresComponent implements OnInit {\r\n\r\n  repertoires: Repertoire[];\r\n  totalCount: number;\r\n  itemsPerPage: any;\r\n  currentPage: number = 1;\r\n  totalItems: any;\r\n\r\n  p: number = 1;\r\n  size: number = 4;\r\n  pageSizes: Array<number> = [4, 8, 12];\r\n\r\n  @ViewChild(SidebarLayoutTwoComponent) searchItem;\r\n  @ViewChild(SidebarLayoutTwoComponent) sortItems;\r\n\r\n  searchRepertoire: string;\r\n  sortRepertoires: string;\r\n\r\n  repertoireId: number;\r\n  isPastShowsVisible: boolean = false;\r\n\r\n  constructor(private repertoireService: RepertoiresService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private alertify: AlertifyService,\r\n    private checkIsTheatreDataAddeedService: CheckIsTheatreDataAddeedService) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((data: {repertoireList: IRepertoireData}) => {\r\n      this.repertoires = data.repertoireList.data,\r\n      this.totalCount = data.repertoireList.totalCount\r\n    });\r\n  }\r\n\r\n  showPastShows(event){\r\n    if(event.target.checked){\r\n      this.isPastShowsVisible = event.target.checked;\r\n      this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p = 1, \r\n        this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n        .subscribe(data => {\r\n          this.repertoires = data.data,\r\n          this.totalCount = data.totalCount\r\n        })\r\n    } else {\r\n      this.isPastShowsVisible = false;\r\n      this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p = 1, \r\n        this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n        .subscribe(data => {\r\n          this.repertoires = data.data,\r\n          this.totalCount = data.totalCount\r\n        })\r\n    }\r\n  }\r\n\r\n  isAfterToday(date) {\r\n    return new Date(date).valueOf() > new Date().valueOf();\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.size = event.target.value;\r\n  \r\n    this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p, \r\n      this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n    .subscribe(data => {\r\n      if(data.data.length == 0){\r\n        this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p = 1, \r\n          this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n          .subscribe(data => {\r\n            this.repertoires = data.data,\r\n            this.totalCount = data.totalCount\r\n          })\r\n      }\r\n      this.repertoires = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n    this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p, \r\n      this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n    .subscribe(data => {\r\n      this.repertoires = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSearchItems(searchTerm: string) : void {\r\n    this.searchRepertoire = searchTerm;\r\n\r\n    this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p = 1, \r\n      this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n    .subscribe(data => {\r\n      this.repertoires = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSortItems(sortOrder: string) : void{\r\n    this.sortRepertoires = sortOrder;\r\n\r\n    this.repertoireService.getRepertoiresFilteredByTheatre(this.size, this.p = 1, \r\n      this.searchRepertoire, this.sortRepertoires, this.isPastShowsVisible)\r\n    .subscribe(data => {\r\n      this.repertoires = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onResetItems(value){\r\n    if(value == true){\r\n      this.repertoireService.getRepertoiresFilteredByTheatre(this.size, 1, '', '', this.isPastShowsVisible)\r\n      .subscribe(data => {\r\n        this.repertoires = data.data,\r\n        this.totalCount = data.totalCount\r\n      })\r\n    }\r\n  }\r\n\r\n  setId(repertoireId){\r\n    this.repertoireId = repertoireId\r\n  }\r\n\r\n  deleteRepertoire(){\r\n    this.repertoireService.deleteRepertoire(this.repertoireId)\r\n    .subscribe(() =>{\r\n      let index = this.repertoires.findIndex(x => x.id === this.repertoireId); //find index in array\r\n      this.repertoires.splice(index, 1);//remove element from array\r\n      if(this.repertoires.length == 0){\r\n        this.checkIsTheatreDataAddeedService.changeRerertoireAddedStatus(false);\r\n      }\r\n      this.alertify.success(\"Successfully deleted\")\r\n    }, err => {\r\n        this.alertify.error('Something went wrong')\r\n      });\r\n  }\r\n\r\n  popoverTitle = 'Be careful!';\r\n  popoverMessage = 'Are you sure you want to delete this repertoire?';\r\n  confirmClicked = false;\r\n  cancelClicked = false;\r\n  confirmText = 'Yes';\r\n  cancelText = 'No';\r\n\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row responsive-row\">\r\n    <!-- Sidebar -->\r\n    <div class=\"col-lg-12 col-md-4\">\r\n      <sidebar-layout-two (searchItem)=\"onSearchItems($event)\" (sortItems)=\"onSortItems($event)\"\r\n        (resetItems)=\"onResetItems($event)\"></sidebar-layout-two>\r\n    </div>\r\n    <!-- Sidebar / End -->\r\n\r\n    <!-- Listings -->\r\n    <div class=\"col-lg-12 col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile\">\r\n          <h4>Repertoires\r\n            <span class=\"checkboxes in-row float-right\">\r\n              <span *ngIf=\"repertoires.length > 0\">\r\n                <input id=\"includePastShows\" type=\"checkbox\" name=\"check\" (change)=\"showPastShows($event)\">\r\n                <label for=\"includePastShows\">Include past shows</label>\r\n              </span>\r\n              <a [routerLink]=\"['/admin-theatre/repertoire/add-repertoire']\"\r\n                class=\"btn btn-sm btn-primary text-white float-sm-right\">\r\n                <i class=\"sl sl-icon-plus\"></i>+ Add new item</a>\r\n            </span>\r\n          </h4>\r\n        </div>\r\n        <div class=\"dashboard-list-box table-responsive invoices with-icons\" *ngIf=\"repertoires.length > 0\">\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Scene</th>\r\n                <th>Date</th>\r\n                <th>Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"col-sm-6 col-md-6 col-lg-6\" *ngFor=\"let repertoire of repertoires | paginate: \r\n        {\r\n           itemsPerPage: size,\r\n           currentPage: p,\r\n           totalItems: totalCount \r\n        }; \r\n        let i = index\">\r\n                <td>{{ size*(p-1)+i+1 }}</td>\r\n                <td><a [routerLink]=\"['/repertoires/about-play', repertoire.id]\">\r\n                    {{ repertoire.showName }} </a>\r\n                  <span *ngIf=\"repertoire.isPremiere\"\r\n                    class=\"badge badge-pill badge-info text-uppercase mr-2\">Premiere</span>\r\n                </td>\r\n                <td>{{ repertoire.sceneName }}</td>\r\n                <td>{{ repertoire.showDate | date:'dd MMM yyyy' }}</td>\r\n                <td>{{ repertoire.showDate | date:'HH:mm' }}</td>\r\n                <td>\r\n                  <a [routerLink]=\"['/admin-theatre/repertoire/edit-repertoire', repertoire.id]\"\r\n                    class=\"btn btn-sm btn-primary text-white\" *ngIf=\"isAfterToday(repertoire.showDate)\"><i\r\n                      class=\"sl sl-icon-note\"></i> Edit</a>\r\n                  <button class=\"btn btn-sm btn-danger text-white\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\"\r\n                    [popoverMessage]=\"popoverMessage\" [confirmText]=\"confirmText\" [cancelText]=\"cancelText\"\r\n                    [placement]=\"placement\" (confirm)=\"deleteRepertoire();\" (cancel)=\"cancelClicked = true\"\r\n                    confirmButtonType=\"danger btn-sm\" cancelButtonType=\"outline-secondary btn-sm\"\r\n                    (click)=\"setId(repertoire.id); cancelClicked = false\" [appendToBody]=\"true\"\r\n                    *ngIf=\"isAfterToday(repertoire.showDate)\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-9 col-md-8\" *ngIf=\"repertoires.length == 0\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-md-12 grid-layout-list\">\r\n            No results found.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-12 col-md-12\" *ngIf=\"repertoires.length > 0\">\r\n        <div class=\"row\">\r\n          <!-- Pagination -->\r\n          <div class=\"col-lg-6 col-md-6\">\r\n            <pagination-controls (pageChange)=\"handlePageChange($event)\" previousLabel=\"Prev\" nextLabel=\"Next\"\r\n              responsive=\"true\" directionLinks=\"true\"></pagination-controls>\r\n          </div>\r\n          <!-- Pagination / End -->\r\n          <!-- Items per page -->\r\n          <div class=\"col-lg-6 col-md-6 text-right\">\r\n            Items per Page:\r\n            <select (change)=\"handlePageSizeChange($event)\">\r\n              <option *ngFor=\"let size of pageSizes\" value=\"{{ size }}\">\r\n                {{ size }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <!-- Items per page / End -->\r\n        </div>\r\n      </div>\r\n      <!-- Listings / End -->\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Currency } from '../../currencies/currency.model';\r\nimport { ShowListForRepertoire } from '../../shows/showListForRepertoire.model';\r\nimport { IS_PREMIERE } from '../../../app.constants';\r\nimport { ShowsService } from '../../shows/shows.service';\r\nimport { CurrenciesService } from '../../currencies/currencies.service';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { ConvertDateService } from 'src/app/shared/services/convert-date.service';\r\nimport { RepertoiresService } from '../repertoires.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ShowForRepertoire } from '../../shows/showForRepertoire.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-repertoire',\r\n  templateUrl: './edit-repertoire.component.html',\r\n  styleUrls: ['./edit-repertoire.component.scss']\r\n})\r\nexport class EditRepertoireComponent implements OnInit {\r\n  \r\n  showListing: ShowListForRepertoire[];\r\n  currencyListing: Currency[];\r\n  repertoireForm: FormGroup;\r\n  isSubmitted: boolean = false;\r\n  selectedShow: boolean = false;\r\n  theatreId: any;\r\n  repertoireId: any;\r\n\r\n  isPremiere = IS_PREMIERE;\r\n  minDate: any;\r\n\r\n  constructor(private showService: ShowsService,\r\n    private currencyService: CurrenciesService,\r\n    private fb: FormBuilder,\r\n    private token: TokenStorageService,\r\n    private convertDateService: ConvertDateService,\r\n    private repertoireService: RepertoiresService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) {\r\n      this.minDate = this.convertDateService.getMinDateTime();\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.showService.getShowsForRepertoireFilteredByTheatre()\r\n        .subscribe(data => {\r\n          this.showListing = data\r\n        });\r\n  \r\n      this.currencyService.getCurrencyList()\r\n        .subscribe(data => {\r\n          this.currencyListing = data\r\n        });\r\n\r\n      this.repertoireForm = this.createRepertoireForm();\r\n  \r\n      this.theatreId = this.token.getTheatreId();\r\n      this.repertoireId = this.activatedRoute.snapshot.params['id'];\r\n      \r\n      this.repertoireService.getRepertoire(this.repertoireId)\r\n        .subscribe((repertoire: any) => {\r\n          this.editRepertoire(repertoire),\r\n          this.selectedShow = repertoire.showId\r\n        });\r\n\r\n    }\r\n\r\n    editRepertoire(repertoire){\r\n      this.repertoireForm.patchValue({\r\n        showId: repertoire.showId,\r\n        showName: repertoire.showName,\r\n        showDate: repertoire.showDate,\r\n        sceneName: repertoire.sceneName,\r\n        isPremiere: repertoire.isPremiere\r\n      }),\r\n      this.repertoireForm.setControl('addPriceDtos', this.setExistingSectorsPrices(repertoire.getPriceDtos));\r\n    }\r\n  \r\n    setExistingSectorsPrices(sectorPriceSets){\r\n      const sectorPriceFormArray = new FormArray([]);\r\n      sectorPriceSets.forEach(s => {\r\n        sectorPriceFormArray.push(this.fb.group({\r\n          sectorId: s.sectorId,\r\n          sectorName: s.sectorName,\r\n          ticketPrice: s.price,\r\n          currencyId: s.currencyId\r\n        }))\r\n      });\r\n      return sectorPriceFormArray;\r\n    }\r\n\r\n    counter = 0;\r\n    onChangeObj($event){\r\n      this.counter += 1;\r\n      if(this.counter > 1){\r\n      this.showService.getShowForRepertoire($event)\r\n        .subscribe(\r\n          (data: ShowForRepertoire[]) => {\r\n            this.displayShowData(data)\r\n          }\r\n        )\r\n      }\r\n    }\r\n  \r\n    displayShowData(data){\r\n      this.repertoireForm.patchValue({\r\n        sceneName: data.scene,\r\n        isPremiere: false,\r\n      })\r\n      this.repertoireForm.setControl('addPriceDtos', this.setExistingSectors(data.getSectorDtos))\r\n    }\r\n    \r\n    setExistingSectors(sectorSets) : FormArray {\r\n      const sectorFormArray = new FormArray([]);\r\n      sectorSets.forEach(s => {\r\n        sectorFormArray.push(this.fb.group({\r\n          sectorName: s.sectorName,\r\n          sectorId: s.id,\r\n          ticketPrice: s.ticketPrice,\r\n          currencyId: 1\r\n        }));\r\n      });\r\n      return sectorFormArray;\r\n    }\r\n\r\n    createRepertoireForm() : FormGroup {\r\n      return this.fb.group({\r\n        id: 0,\r\n        showId: ['', Validators.required],\r\n        showDate: ['', Validators.required],\r\n        sceneName: [''],\r\n        isPremiere: [''],\r\n        addPriceDtos: this.fb.array([this.initialSectorRows()])\r\n      });\r\n    }\r\n  \r\n    initialSectorRows(){\r\n      return this.fb.group({\r\n        sectorId: [''],\r\n        sectorName: [''],\r\n        ticketPrice: ['', Validators.required],\r\n        currencyId: ['']\r\n      });\r\n    }\r\n\r\n\r\n  //Getter methods to access formControls\r\n  get showId() { return this.repertoireForm.get('showId'); }\r\n  get showDate() { return this.repertoireForm.get('showDate'); }\r\n  get premiere() { return this.repertoireForm.get('isPremiere'); }\r\n\r\n  get sectorControls(){\r\n    return (<FormArray>this.repertoireForm.controls.addPriceDtos['controls']);\r\n  }\r\n\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n\r\n    if(!this.repertoireForm.valid){\r\n      return false;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    let showDate = this.repertoireForm.get('showDate').value;\r\n    let showDateTime = this.convertDateService.convertDate(showDate);\r\n\r\n    formData.append('Id', this.repertoireId);\r\n    formData.append('ShowId', this.repertoireForm.get('showId').value);\r\n    formData.append('TheatreId', this.theatreId);\r\n    formData.append('ShowDate', showDateTime);\r\n    formData.append('IsPremiere', this.repertoireForm.get('isPremiere').value);\r\n\r\n    const prices = this.repertoireForm.get('addPriceDtos').value;\r\n\r\n    for(let i = 0; i < prices.length; i++){\r\n      formData.append('AddPriceDtos[' + i + '][SectorId]', prices[i].sectorId);\r\n      formData.append('AddPriceDtos[' + i + '][TicketPrice]', prices[i].ticketPrice);\r\n      formData.append('AddPriceDtos[' + i + '][CurrencyId]', prices[i].currencyId)\r\n    }\r\n\r\n    // new Response(formData).text().then(console.log);\r\n\r\n    this.repertoireService.editRepertoire(this.repertoireId, formData)\r\n      .subscribe(() =>{\r\n        this.alertify.success(\"Sucessfully edited.\"),\r\n        this.router.navigate(['/admin-theatre/repertoire/all-repertoires'])\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      });\r\n  }\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Edit Repertoire</h3>\r\n          </div>\r\n          <!-- Title -->\r\n          <form [formGroup]=\"repertoireForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <label for=\"showId\">Show: </label>\r\n                <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"showId\"\r\n                  aria-placeholder=\"Show\" (ngModelChange)=\"onChangeObj($event)\">\r\n                  <option value=\"\" disabled>Select show</option>\r\n                  <option *ngFor=\"let show of showListing\" [value]=\"show.id\">\r\n                    {{ show.title }}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"isSubmitted && showId.errors?.required\" class=\"text-warning small\">\r\n                  Show is required.\r\n                </div>\r\n              </div>\r\n              <!-- Show Date -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"showDate\">Show Date and Time: </label>\r\n                  <input type=\"datetime-local\" placeholder=\"Show Date\" formControlName=\"showDate\"\r\n                    class=\"form-control form-control-alternative\" min=\"{{ minDate }}\">\r\n                  <div *ngIf=\"showDate.invalid && (showDate.dirty || showDate.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"showDate.errors.required\">\r\n                      Show date and time details are required.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Scene -->\r\n            <div *ngIf=\"selectedShow\">\r\n              <div class=\"row with-forms\">\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"sceneName\">Scene: </label>\r\n                  <input type=\"text\" placeholder=\"Scene name\" formControlName=\"sceneName\" readonly\r\n                    class=\"form-control form-control-alternative\">\r\n                </div>\r\n                <!-- Premiere -->\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"isPremiere\">Premiere: </label>\r\n                  <select formControlName=\"isPremiere\" class=\"custom-select form-control-alternative mb-1\"\r\n                    aria-placeholder=\"Premiere\">\r\n                    <option value=\"\" disabled>Select Premiere Status</option>\r\n                    <option *ngFor=\"let premiere of isPremiere\" [value]=\"premiere.id\">\r\n                      {{ premiere.value }}\r\n                    </option>\r\n                  </select>\r\n                  <div *ngIf=\"isSubmitted && premiere.errors?.required\" class=\"text-warning small\">\r\n                    Premiere status is required.\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Sectors with Prices -->\r\n              <div formArrayName=\"addPriceDtos\" *ngFor=\"let sectorRow of sectorControls; let i= index\">\r\n                <div class=\"row with-forms\" [formGroupName]='i'>\r\n                  <div class=\"col-md-6\">\r\n                    <label for=\"sectorId\">Sector: </label>\r\n                    <input type=\"hidden\" formControlName=\"sectorId\">\r\n                    <input type=\"text\" formControlName=\"sectorName\" placeholder=\"Sector Name\" readonly\r\n                      class=\"form-control form-control-alternative\">\r\n                  </div>\r\n                  <!-- Price -->\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"ticketPrice\">Price: </label>\r\n                      <input type=\"text\" placeholder=\"Ticket Price\" required formControlName=\"ticketPrice\"\r\n                        class=\"form-control form-control-alternative\">\r\n                    </div>\r\n                    <div *ngIf=\"isSubmitted && sectorControls[i].get('ticketPrice').hasError('required')\"\r\n                      class=\"text-warning small\">\r\n                      Price is required.\r\n                    </div>\r\n                  </div>\r\n                  <!-- Currency -->\r\n                  <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"currencyId\">Currency: </label>\r\n                      <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"currencyId\"\r\n                        aria-placeholder=\"Currency\" required>\r\n                        <option value=\"\" disabled>Select currency</option>\r\n                        <option *ngFor=\"let currency of currencyListing\" [value]=\"currency.id\">\r\n                          {{ currency.currencyName }}\r\n                        </option>\r\n                      </select>\r\n                      <div *ngIf=\"isSubmitted && sectorControls[i].get('currencyId').hasError('required')\"\r\n                        class=\"text-warning small\">\r\n                        Currency is required.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/repertoire/all-repertoires']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RepertoiresRoutes } from './repertoires.routing';\r\nimport { AllRepertoiresComponent } from './all-repertoires/all-repertoires.component';\r\nimport { AddRepertoireComponent } from './add-repertoire/add-repertoire.component';\r\nimport { EditRepertoireComponent } from './edit-repertoire/edit-repertoire.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(RepertoiresRoutes),\r\n    SharedModule,\r\n    NgxPaginationModule,\r\n    ConfirmationPopoverModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    AllRepertoiresComponent,\r\n    AddRepertoireComponent,\r\n    EditRepertoireComponent\r\n  ]\r\n})\r\nexport class RepertoiresModule { }\r\n","import { Routes } from '@angular/router';\r\nimport { AllRepertoiresComponent } from './all-repertoires/all-repertoires.component';\r\nimport { AddRepertoireComponent } from './add-repertoire/add-repertoire.component';\r\nimport { EditRepertoireComponent } from './edit-repertoire/edit-repertoire.component';\r\nimport { AllRepertoiresResolverService } from './all-repertoires/all-repertoires-resolver.service';\r\n\r\nexport const RepertoiresRoutes: Routes = [\r\n  { \r\n    path: 'all-repertoires',\r\n    component: AllRepertoiresComponent,\r\n    resolve: { repertoireList: AllRepertoiresResolverService }\r\n  },\r\n  {\r\n    path: 'add-repertoire',\r\n    component: AddRepertoireComponent\r\n  },\r\n  {\r\n    path: 'edit-repertoire/:id',\r\n    component: EditRepertoireComponent\r\n  }\r\n];\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { IRepertoireData } from 'src/app/shared/interfaces/IRepertoireData';\r\nimport { AddRepertoire } from './addRepertoire.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepertoiresService {\r\n\r\nconstructor(private httpClient: HttpClient,\r\n  private token: TokenStorageService) { }\r\n\r\npublic API_URL = API_URL;\r\npublic theatreId = this.token.getTheatreId();\r\n\r\ngetRepertoiresFilteredByTheatre(perPage: number = 4, pageNumber: number = 1, \r\n  searchQuery: string = \"\", sortOrder: string = \"\", pastShows: boolean = false) \r\n: Observable<IRepertoireData>{\r\n  let params = new HttpParams();\r\n  params = params.append('perPage', String(perPage));\r\n  params = params.append('pageNumber', String(pageNumber));\r\n  params = params.append('searchQuery', String(searchQuery));\r\n  params = params.append('sortOrder', String(sortOrder));\r\n  params = params.append('Type', 'repertoiresFilteredByTheatre');\r\n  params = params.append('TheatreId', this.theatreId);\r\n  params = params.append('PastShows', String(pastShows));\r\n\r\n  return this.httpClient.get<IRepertoireData>(this.API_URL + '/repertoires', { params })\r\n    .pipe(\r\n      map((repertoire: IRepertoireData) => repertoire)\r\n    )}\r\n\r\naddRepertoire(repertoire) : Observable<AddRepertoire>{\r\n  return this.httpClient.post<AddRepertoire>(this.API_URL + '/repertoires', repertoire)\r\n    .pipe(\r\n      map((repertoire: AddRepertoire) => repertoire)\r\n    )\r\n  }\r\n\r\ngetRepertoire(id): Observable<AddRepertoire>{\r\n  let params = new HttpParams();\r\n  params = params.append('Type', 'repertoireForEdit');\r\n\r\n  return this.httpClient.get<AddRepertoire>(this.API_URL + '/repertoires/' + id, { params })\r\n    .pipe(\r\n      map((repertoire: AddRepertoire) => repertoire)\r\n    )\r\n  }\r\n\r\n  \r\neditRepertoire(id, repertoire) : Observable<AddRepertoire>{\r\n  return this.httpClient.put<AddRepertoire>(this.API_URL + '/repertoires/' + id, repertoire)\r\n    .pipe(\r\n      map((repertoire: AddRepertoire) => repertoire)\r\n    )\r\n  }\r\n\r\n\r\ndeleteRepertoire(id: number) : Observable<void> {\r\n  return this.httpClient.delete<void>(this.API_URL + '/repertoires/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\nimport { ScenesService } from '../scenes.service';\r\n\r\n@Component({\r\n  selector: 'app-add-scene',\r\n  templateUrl: './add-scene.component.html',\r\n  styleUrls: ['./add-scene.component.scss']\r\n})\r\nexport class AddSceneComponent implements OnInit {\r\n\r\n  isSubmitted: boolean = false;\r\n  sceneForm: FormGroup;\r\n  theatreId;\r\n\r\n  constructor(private sceneService: ScenesService,\r\n    private fb: FormBuilder,\r\n    private token: TokenStorageService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private checkIsTheatreDataAddedService: CheckIsTheatreDataAddeedService) { }\r\n\r\n  namePattern = \"^[A-Z0-9][a-zA-Z0-9 ]+$\";\r\n  seatsPatters = \"^[1-9][0-9]*$\";\r\n\r\n  ngOnInit() {\r\n    this.sceneForm = this.fb.group({\r\n      id: 0,\r\n      sceneName: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      addSectorDtos: this.fb.array([this.initialSectorRows()])\r\n    });\r\n  }\r\n\r\n  initialSectorRows(){\r\n    return this.fb.group({\r\n      sectorName: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      seatCapacity: ['', [Validators.required, Validators.pattern(this.seatsPatters)]],\r\n      rowsTotalNumber: ['', [Validators.required, Validators.pattern(this.seatsPatters)]]\r\n    });\r\n  }\r\n\r\n  get formArr(){\r\n    return this.sceneForm.get('addSectorDtos') as FormArray;\r\n  }\r\n\r\n  get sectorControls(){\r\n    return this.sceneForm.controls.addSectorDtos['controls'];\r\n  }\r\n\r\n  addNewSector(){\r\n    this.formArr.push(this.initialSectorRows());\r\n  }\r\n\r\n  deleteSectorRow(index: number){\r\n    this.formArr.removeAt(index);\r\n  }\r\n\r\n  //Getter methods to access formControls\r\n  get sceneName() { return this.sceneForm.get('sceneName'); }\r\n  get addSectorDtos() { return this.sceneForm.get('addSectorDtos'); }\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n\r\n    this.theatreId = this.token.getTheatreId();\r\n    \r\n    if(!this.sceneForm.valid){\r\n      return false;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('sceneName', this.sceneName.value);\r\n    formData.append('theatreId', this.theatreId);\r\n    \r\n    const sectors = this.addSectorDtos.value;\r\n\r\n    for(let i=0; i<sectors.length; i++){\r\n      formData.append('addSectorDtos[' + i + '][sectorName]', sectors[i].sectorName);\r\n      formData.append('addSectorDtos[' + i + '][seatCapacity]', sectors[i].seatCapacity);\r\n      formData.append('addSectorDtos[' + i + '][rowsTotalNumber]', sectors[i].rowsTotalNumber);\r\n    }\r\n\r\n    //new Response(formData).text().then(console.log);\r\n\r\n    this.sceneService.addScene(formData)\r\n      .subscribe(() => {\r\n        this.alertify.success(\"Sucessfully added.\"),\r\n        this.checkIsTheatreDataAddedService.changeSceneAddedStatus(true);\r\n        this.router.navigate(['/admin-theatre/scenes/all-scenes'])\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      });\r\n  }\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Add New Scene</h3>\r\n          </div>\r\n          <!-- Title -->\r\n          <form [formGroup]=\"sceneForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"sceneName\">Scene Name: </label>\r\n                  <input type=\"text\" placeholder=\"Scene Name\" formControlName=\"sceneName\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"sceneName.invalid && (sceneName.dirty || sceneName.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"sceneName.errors.required\">\r\n                      Scene name is required.\r\n                    </span>\r\n                    <span *ngIf=\"sceneName.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Sectors -->\r\n            <div formArrayName=\"addSectorDtos\" *ngFor=\"let sectorRow of sectorControls; let i= index\">\r\n              <div class=\"row with-forms\" [formGroupName]='i'>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"sectorName\">Sector: </label>\r\n                  <input type=\"text\" formControlName=\"sectorName\" placeholder=\"Sector Name\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"sectorControls[i].get('sectorName').invalid && \r\n                  (sectorControls[i].get('sectorName').dirty || \r\n                  sectorControls[i].get('sectorName').touched || isSubmitted)\" class=\"text-warning small\">\r\n                    <span *ngIf=\"sectorControls[i].get('sectorName').errors.required\">\r\n                      Sector name is required.\r\n                    </span>\r\n                    <span *ngIf=\"sectorControls[i].get('sectorName').errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <!-- Seat capacity -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"seatCapacity\">Seat Capacity: </label>\r\n                    <input type=\"text\" formControlName=\"seatCapacity\" placeholder=\"Seat capacity\"\r\n                      class=\"form-control form-control-alternative\">\r\n                    <div *ngIf=\"sectorControls[i].get('seatCapacity').invalid && \r\n                      (sectorControls[i].get('seatCapacity').dirty || \r\n                      sectorControls[i].get('seatCapacity').touched || isSubmitted)\" class=\"text-warning small\">\r\n                      <span *ngIf=\"sectorControls[i].get('seatCapacity').errors.required\">\r\n                        Seat capacity is required.\r\n                      </span>\r\n                      <span *ngIf=\"sectorControls[i].get('seatCapacity').errors.pattern\">\r\n                        Wrong format.\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- Role Description -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"rowsTotalNumber\">Number of Rows: </label>\r\n                    <input type=\"text\" formControlName=\"rowsTotalNumber\" placeholder=\"Number of rows\"\r\n                      class=\"form-control form-control-alternative\">\r\n                    <div *ngIf=\"sectorControls[i].get('rowsTotalNumber').invalid && \r\n                      (sectorControls[i].get('rowsTotalNumber').dirty || \r\n                      sectorControls[i].get('rowsTotalNumber').touched || isSubmitted)\" class=\"text-warning small\">\r\n                      <span *ngIf=\"sectorControls[i].get('rowsTotalNumber').errors.required\">\r\n                        Number of rows is required.\r\n                      </span>\r\n                      <span *ngIf=\"sectorControls[i].get('rowsTotalNumber').errors.pattern\">\r\n                        Wrong format.\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <label for=\"\">Add More Sectors: </label><br>\r\n                  <button type=\"button\" (click)=\"addNewSector()\" [disabled]=\"addSectorDtos.invalid\"\r\n                    class=\"btn btn-sm btn-primary text-white\">\r\n                    Add another sector <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                  <button *ngIf=\"sectorControls.length > 1\" (click)=\"deleteSectorRow(i)\"\r\n                    class=\"btn btn-sm btn-danger text-white\">\r\n                    <i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/scenes/all-scenes']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ISceneData } from 'src/app/shared/interfaces/ISceneData';\nimport { ScenesService } from '../scenes.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllScenesResolverService implements Resolve<ISceneData> {\n\nconstructor(private sceneService: ScenesService) { }\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ISceneData> {\n    return this.sceneService.getScenesFilteredByTheatre();\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { IMG_BASE_URL } from 'src/app/app.constants';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { SidebarLayoutTwoComponent } from 'src/app/listing/SidebarLayoutTwo/SidebarLayoutTwo.component';\r\nimport { SceneBaseInfo } from '../sceneBaseInfo.model';\r\nimport { ScenesService } from '../scenes.service';\r\nimport { ISceneData } from '../../../shared/interfaces/ISceneData';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-all-scenes',\r\n  templateUrl: './all-scenes.component.html',\r\n  styleUrls: ['./all-scenes.component.scss']\r\n})\r\nexport class AllScenesComponent implements OnInit {\r\n\r\n  scenes: SceneBaseInfo[];\r\n  readonly IMG_BASE_URL = IMG_BASE_URL;\r\n  \r\n  totalCount: number;\r\n  itemsPerPage: any;\r\n  currentPage: number = 1;\r\n  totalItems: any;\r\n\r\n  p: number = 1;\r\n  size: number = 4;\r\n  pageSizes: Array<number> = [4, 8, 12];\r\n\r\n  @ViewChild(SidebarLayoutTwoComponent) searchItem;\r\n  @ViewChild(SidebarLayoutTwoComponent) sortItems;\r\n\r\n  searchScene: string;\r\n  sortScenes: string;\r\n\r\n  sceneId: number;\r\n\r\n  constructor(private token: TokenStorageService,\r\n    private sceneService: ScenesService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private checkIsTheatreDataAddedService: CheckIsTheatreDataAddeedService) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((data: {sceneList: ISceneData}) => {\r\n      this.scenes = data.sceneList.data,\r\n      this.totalCount = data.sceneList.totalCount\r\n    });\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.size = event.target.value;\r\n  \r\n    this.sceneService.getScenesFilteredByTheatre(this.size, this.p, this.searchScene, this.sortScenes)\r\n    .subscribe(data => {\r\n      if(data.data.length == 0){\r\n        this.sceneService.getScenesFilteredByTheatre(this.size, this.p = 1, this.searchScene, this.sortScenes)\r\n          .subscribe(data => {\r\n            this.scenes = data.data,\r\n            this.totalCount = data.totalCount\r\n          })\r\n      }\r\n      this.scenes = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n    this.sceneService.getScenesFilteredByTheatre(this.size, this.p, this.searchScene, this.sortItems)\r\n    .subscribe(data => {\r\n      this.scenes = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSearchItems(searchTerm: string) : void {\r\n    this.searchScene = searchTerm;\r\n\r\n    this.sceneService.getScenesFilteredByTheatre(this.size, this.p = 1, this.searchScene, this.sortScenes)\r\n    .subscribe(data => {\r\n      this.scenes = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSortItems(sortOrder: string) : void{\r\n    this.sortScenes = sortOrder;\r\n\r\n    this.sceneService.getScenesFilteredByTheatre(this.size, this.p = 1, this.searchScene, this.sortScenes)\r\n    .subscribe(data => {\r\n      this.scenes = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onResetItems(value){\r\n    if(value == true){\r\n      this.sceneService.getScenesFilteredByTheatre(this.size, 1, '', '')\r\n      .subscribe(data => {\r\n        this.scenes = data.data,\r\n        this.totalCount = data.totalCount\r\n      })\r\n    }\r\n  }\r\n\r\n  setId(sceneId){\r\n    this.sceneId = sceneId\r\n  }\r\n\r\n  deleteScene(){\r\n    this.sceneService.deleteScene(this.sceneId)\r\n    .subscribe(() => {\r\n      let index = this.scenes.findIndex(x => x.id === this.sceneId); //find index in array\r\n      this.scenes.splice(index, 1);//remove element from array\r\n      if(this.scenes.length == 0){\r\n        this.checkIsTheatreDataAddedService.changeSceneAddedStatus(false);\r\n      }\r\n      this.alertify.success(\"Successfully deleted\")\r\n    }, err => {\r\n      this.alertify.error('Something went wrong');\r\n      });\r\n  }\r\n\r\n  popoverTitle = 'Be careful!';\r\n  popoverMessage = 'Are you sure you want to delete this scene?';\r\n  confirmClicked = false;\r\n  cancelClicked = false;\r\n  confirmText = 'Yes';\r\n  cancelText = 'No';\r\n\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row responsive-row\">\r\n    <!-- Sidebar -->\r\n    <div class=\"col-lg-12 col-md-4\">\r\n      <sidebar-layout-two (searchItem)=\"onSearchItems($event)\" (sortItems)=\"onSortItems($event)\"\r\n        (resetItems)=\"onResetItems($event)\"></sidebar-layout-two>\r\n    </div>\r\n    <!-- Sidebar / End -->\r\n    <!-- Listings -->\r\n    <div class=\"col-lg-12 col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile\">\r\n          <h4>Scenes <a [routerLink]=\"['/admin-theatre/scenes/add-scene']\"\r\n              class=\"btn btn-sm btn-primary text-white float-sm-right\">\r\n              <i class=\"sl sl-icon-plus\"></i>+ Add new item</a>\r\n          </h4>\r\n        </div>\r\n        <div class=\"dashboard-list-box table-responsive invoices with-icons\" *ngIf=\"scenes.length > 0\">\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Scene</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"col-sm-6 col-md-6 col-lg-6\" *ngFor=\"let scene of scenes | paginate: \r\n          {\r\n             itemsPerPage: size,\r\n             currentPage: p,\r\n             totalItems: totalCount \r\n          }; \r\n          let i = index\">\r\n                <td>{{ size*(p-1)+i+1 }}</td>\r\n                <td>{{ scene.sceneName }}</td>\r\n                <td>\r\n                  <a [routerLink]=\" ['/admin-theatre/scenes/edit-scene', scene.id]\"\r\n                    class=\"btn btn-sm btn-primary text-white\"><i class=\"sl sl-icon-note\"></i> Edit</a>\r\n                  <button class=\"btn btn-sm btn-danger text-white\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\"\r\n                    [popoverMessage]=\"popoverMessage\" [confirmText]=\"confirmText\" [cancelText]=\"cancelText\"\r\n                    [placement]=\"placement\" (confirm)=\"deleteScene();\" (cancel)=\"cancelClicked = true\"\r\n                    confirmButtonType=\"danger btn-sm\" cancelButtonType=\"outline-secondary btn-sm\"\r\n                    (click)=\"setId(scene.id); confirmClicked = false; cancelClicked = false\" [appendToBody]=\"true\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-9 col-md-8\" *ngIf=\"scenes.length == 0\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-md-12 grid-layout-list\">\r\n            No results found.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-12 col-md-12\" *ngIf=\"scenes.length > 0\">\r\n        <div class=\"row\">\r\n          <!-- Pagination -->\r\n          <div class=\"col-lg-6 col-md-6\">\r\n            <pagination-controls (pageChange)=\"handlePageChange($event)\" previousLabel=\"Prev\" nextLabel=\"Next\"\r\n              responsive=\"true\" directionLinks=\"true\"></pagination-controls>\r\n          </div>\r\n          <!-- Pagination / End -->\r\n          <!-- Items per page -->\r\n          <div class=\"col-lg-6 col-md-6 text-right\">\r\n            Items per Page:\r\n            <select (change)=\"handlePageSizeChange($event)\">\r\n              <option *ngFor=\"let size of pageSizes\" value=\"{{ size }}\">\r\n                {{ size }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <!-- Items per page / End -->\r\n        </div>\r\n      </div>\r\n      <!-- Listings / End -->\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { Scene } from '../scene.model';\r\nimport { ScenesService } from '../scenes.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-scene',\r\n  templateUrl: './edit-scene.component.html',\r\n  styleUrls: ['./edit-scene.component.scss']\r\n})\r\nexport class EditSceneComponent implements OnInit {\r\n\r\n  isSubmitted: boolean = false;\r\n  sceneForm: FormGroup;\r\n  theatreId;\r\n  sceneId;\r\n  sceneDetails: Scene;\r\n\r\n  constructor(private sceneService: ScenesService,\r\n    private fb: FormBuilder,\r\n    private token: TokenStorageService,\r\n    private alertify: AlertifyService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute) {}\r\n\r\n  namePattern = \"^[A-Z0-9][a-zA-Z0-9 ]+$\";\r\n  seatsPatters = \"^[1-9][0-9]*$\";\r\n\r\n  ngOnInit() {\r\n    this.sceneForm = this.createSceneForm();\r\n    this.sceneId = this.activatedRoute.snapshot.params['id'];\r\n    this.sceneService.getScene(this.sceneId)\r\n      .subscribe((scene: Scene) => {\r\n        this.editScene(scene),\r\n        this.sceneDetails = scene,\r\n        this.theatreId = this.token.getTheatreId();\r\n      }, err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  editScene(scene){\r\n    this.sceneForm.patchValue({\r\n      sceneName: scene.sceneName\r\n    }),\r\n    this.sceneForm.setControl('addSectorDtos', this.setExistingSectors(scene.getSectorDtos));\r\n  }\r\n\r\n  setExistingSectors(sectorsSet) : FormArray{\r\n    const sectorsFormArray = new FormArray([]);\r\n      sectorsSet.forEach(s => {\r\n        sectorsFormArray.push(this.fb.group({\r\n          sectorId: s.sectorId,\r\n          sectorName: s.sectorName,\r\n          seatCapacity: s.seatCapacity,\r\n          rowsTotalNumber: s.rowsTotalNumber\r\n        }))\r\n      });\r\n    return sectorsFormArray;\r\n  }\r\n\r\n  createSceneForm() : FormGroup {\r\n    return this.fb.group({\r\n      sceneName: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      addSectorDtos: this.fb.array([this.initialSectorRows()])\r\n    });\r\n  }\r\n\r\n  initialSectorRows(){\r\n    return this.fb.group({\r\n      sectorName: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      seatCapacity: ['', [Validators.required, Validators.pattern(this.seatsPatters)]],\r\n      rowsTotalNumber: ['', [Validators.required, Validators.pattern(this.seatsPatters)]]\r\n    });\r\n  }\r\n\r\n  get formArr(){\r\n    return this.sceneForm.get('addSectorDtos') as FormArray;\r\n  }\r\n\r\n  get sectorControls(){\r\n    return this.sceneForm.controls.addSectorDtos['controls'];\r\n  }\r\n\r\n  addNewSector(){\r\n    this.formArr.push(this.initialSectorRows());\r\n  }\r\n\r\n  deleteSectorRow(index: number){\r\n    this.formArr.removeAt(index);\r\n  }\r\n\r\n  //Getter methods to access formControls\r\n  get sceneName() { return this.sceneForm.get('sceneName'); }\r\n  get addSectorDtos() { return this.sceneForm.get('addSectorDtos'); }\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n    \r\n    if(!this.sceneForm.valid){\r\n      return false;\r\n    }\r\n\r\n    this.mapFormValuesToSceneModel();\r\n\r\n    this.sceneService.editScene(this.sceneId, this.sceneDetails)\r\n      .subscribe(() => {\r\n        this.alertify.success(\"Sucessfully edited.\"),\r\n        this.router.navigate(['/admin-theatre/scenes/all-scenes'])\r\n        },\r\n        err => {\r\n          this.alertify.error(err);\r\n        });\r\n  }\r\n\r\n  mapFormValuesToSceneModel(){\r\n    this.sceneDetails.sceneName = this.sceneForm.value.sceneName;\r\n    this.sceneDetails.theatreId = this.theatreId;\r\n    this.sceneDetails.addSectorDtos = this.sceneForm.value.addSectorDtos;\r\n\r\n    for(let i=0; i<this.sceneForm.value.addSectorDtos.length; i++)\r\n    {\r\n      this.sceneDetails.addSectorDtos[i].sectorName = this.sceneForm.value.addSectorDtos[i].sectorName;\r\n      this.sceneDetails.addSectorDtos[i].seatCapacity = (this.sceneForm.value.addSectorDtos[i].seatCapacity).toString();\r\n      this.sceneDetails.addSectorDtos[i].rowsTotalNumber = (this.sceneForm.value.addSectorDtos[i].rowsTotalNumber).toString();\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Edit Scene</h3>\r\n          </div>\r\n          <!-- Title -->\r\n          <form [formGroup]=\"sceneForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"sceneName\">Scene Name: </label>\r\n                  <input type=\"text\" placeholder=\"Scene Name\" formControlName=\"sceneName\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"sceneName.invalid && (sceneName.dirty || sceneName.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"sceneName.errors.required\">\r\n                      Scene name is required.\r\n                    </span>\r\n                    <span *ngIf=\"sceneName.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Sectors -->\r\n            <div formArrayName=\"addSectorDtos\" *ngFor=\"let sectorRow of sectorControls; let i= index\">\r\n              <div class=\"row with-forms\" [formGroupName]='i'>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"sectorName\">Sector: </label>\r\n                  <input type=\"text\" formControlName=\"sectorName\" placeholder=\"Sector Name\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"sectorControls[i].get('sectorName').invalid && \r\n                  (sectorControls[i].get('sectorName').dirty || \r\n                  sectorControls[i].get('sectorName').touched || isSubmitted)\" class=\"text-warning small\">\r\n                    <span *ngIf=\"sectorControls[i].get('sectorName').errors.required\">\r\n                      Sector name is required.\r\n                    </span>\r\n                    <span *ngIf=\"sectorControls[i].get('sectorName').errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <!-- Seat capacity -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"seatCapacity\">Seat Capacity: </label>\r\n                    <input type=\"text\" formControlName=\"seatCapacity\" placeholder=\"Seat capacity\"\r\n                      class=\"form-control form-control-alternative\">\r\n                    <div *ngIf=\"sectorControls[i].get('seatCapacity').invalid && \r\n                      (sectorControls[i].get('seatCapacity').dirty || \r\n                      sectorControls[i].get('seatCapacity').touched || isSubmitted)\" class=\"text-warning small\">\r\n                      <span *ngIf=\"sectorControls[i].get('seatCapacity').errors.required\">\r\n                        Seat capacity is required.\r\n                      </span>\r\n                      <span *ngIf=\"sectorControls[i].get('seatCapacity').errors.pattern\">\r\n                        Wrong format.\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- Role Description -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"rowsTotalNumber\">Number of Rows: </label>\r\n                    <input type=\"text\" formControlName=\"rowsTotalNumber\" placeholder=\"Number of rows\"\r\n                      class=\"form-control form-control-alternative\">\r\n                    <div *ngIf=\"sectorControls[i].get('rowsTotalNumber').invalid && \r\n                      (sectorControls[i].get('rowsTotalNumber').dirty || \r\n                      sectorControls[i].get('rowsTotalNumber').touched || isSubmitted)\" class=\"text-warning small\">\r\n                      <span *ngIf=\"sectorControls[i].get('rowsTotalNumber').errors.required\">\r\n                        Number of rows is required.\r\n                      </span>\r\n                      <span *ngIf=\"sectorControls[i].get('rowsTotalNumber').errors.pattern\">\r\n                        Wrong format.\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <label for=\"\">Add More Sectors: </label><br>\r\n                  <button type=\"button\" (click)=\"addNewSector()\" [disabled]=\"addSectorDtos.invalid\"\r\n                    class=\"btn btn-sm btn-primary text-white\">\r\n                    Add another sector <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                  <button *ngIf=\"sectorControls.length > 1\" (click)=\"deleteSectorRow(i)\"\r\n                    class=\"btn btn-sm btn-danger text-white\">\r\n                    <i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/scenes/all-scenes']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ScenesRoutes } from './scenes.routing';\nimport { AllScenesComponent } from './all-scenes/all-scenes.component';\nimport { AddSceneComponent } from './add-scene/add-scene.component';\nimport { EditSceneComponent } from './edit-scene/edit-scene.component';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ScenesRoutes),\n    SharedModule,\n    NgxPaginationModule,\n    ReactiveFormsModule,\n    ConfirmationPopoverModule\n  ],\n  declarations: [\n    AllScenesComponent,\n    AddSceneComponent,\n    EditSceneComponent\n  ]\n})\nexport class ScenesModule { }\n","import { Routes } from '@angular/router';\nimport { AllScenesComponent } from './all-scenes/all-scenes.component';\nimport { AddSceneComponent } from './add-scene/add-scene.component';\nimport { EditSceneComponent } from './edit-scene/edit-scene.component';\nimport { AllScenesResolverService } from './all-scenes/all-scenes-resolver.service';\n\nexport const ScenesRoutes: Routes = [\n  { \n    path: 'all-scenes',\n    component: AllScenesComponent,\n    resolve: { sceneList : AllScenesResolverService }\n  },\n  {\n    path: 'add-scene',\n    component: AddSceneComponent\n  },\n  {\n    path: 'edit-scene/:id',\n    component: EditSceneComponent\n  }\n];","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { ISceneData } from 'src/app/shared/interfaces/ISceneData';\r\nimport { SceneBaseInfo } from './sceneBaseInfo.model';\r\nimport { Scene } from './scene.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScenesService {\r\n\r\n  constructor(private token: TokenStorageService,\r\n    private httpClient: HttpClient) { }\r\n\r\n  public API_URL = API_URL;\r\n  theatreId = this.token.getTheatreId();\r\n\r\n  \r\n  getSceneListFilteredByTheatre() : Observable<SceneBaseInfo[]>{\r\n    let params = new HttpParams();\r\n    params = params.append('TheatreId', this.theatreId);\r\n\r\n    return this.httpClient.get<SceneBaseInfo[]>(this.API_URL + '/scenes', { params })\r\n      .pipe(\r\n        map((scenes: SceneBaseInfo[]) => scenes)\r\n      );\r\n  }\r\n\r\n  getScenesFilteredByTheatre(perPage: number = 4, pageNumber: number = 1, searchQuery: string = \"\", sortOrder: string = \"\") \r\n: Observable<ISceneData>{\r\n  let params = new HttpParams();\r\n  params = params.append('perPage', String(perPage));\r\n  params = params.append('pageNumber', String(pageNumber));\r\n  params = params.append('searchQuery', String(searchQuery));\r\n  params = params.append('sortOrder', String(sortOrder));\r\n  params = params.append('Type', 'scenesFilteredByTheatre');\r\n  params = params.append('TheatreId', this.theatreId);\r\n\r\n  return this.httpClient.get<ISceneData>(this.API_URL + '/scenes', { params })\r\n    .pipe(\r\n      map((scenes: ISceneData) => scenes)\r\n    )}\r\n\r\n  addScene(scene) : Observable<Scene>{\r\n    return this.httpClient.post<Scene>(this.API_URL + '/scenes/', scene)\r\n      .pipe(\r\n        map((scene: Scene) => scene)\r\n      )\r\n  }\r\n\r\n  editScene(id: number, scene: Scene) : Observable<Scene>{\r\n    return this.httpClient.put<Scene>(this.API_URL + '/scenes/' + id, scene)\r\n      .pipe(\r\n        map((scene: Scene) => scene)\r\n      )\r\n  }\r\n\r\n  getScene(id: number) : Observable<Scene>{\r\n    return this.httpClient.get<Scene>(this.API_URL + '/scenes/' + id)\r\n      .pipe(\r\n        map((scene: Scene) => scene)\r\n      )\r\n  }\r\n\r\n  deleteScene(id: number) : Observable<void> {\r\n    return this.httpClient.delete<any>(this.API_URL + '/scenes/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActorBaseDetails } from 'src/app/actors/ActorBaseDetails.model';\r\nimport { ActorsService } from 'src/app/actors/actors.service';\r\nimport { DirectorBaseDetails } from 'src/app/directors/DirectorBaseDetails.model';\r\nimport { DirectorsService } from 'src/app/directors/directors.service';\r\nimport { CategoriesService } from 'src/app/globalFrontendComponents/Categories/Categories.service';\r\nimport { Category } from 'src/app/globalFrontendComponents/Categories/Category.model';\r\nimport { SceneBaseInfo } from '../../scenes/sceneBaseInfo.model';\r\nimport { ScenesService } from '../../scenes/scenes.service';\r\nimport { ConvertDateService } from '../../../shared/services/convert-date.service';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { ShowsService } from '../shows.service';\r\nimport { Router } from '@angular/router';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-add-show',\r\n  templateUrl: './add-show.component.html',\r\n  styleUrls: ['./add-show.component.scss']\r\n})\r\nexport class AddShowComponent implements OnInit {\r\n\r\n  categoryListing: Category[];\r\n  sceneListing: SceneBaseInfo[];\r\n  directorListing: DirectorBaseDetails[];\r\n  actorListing: ActorBaseDetails[];\r\n\r\n  showForm: FormGroup;\r\n  isSubmitted = false;\r\n  files: File[] = [];\r\n  filesLength: number;\r\n  filesValidation: boolean = false;\r\n\r\n  theatreId: any;\r\n  \r\n  constructor(private categoryService: CategoriesService,\r\n    private sceneService: ScenesService,\r\n    private directorService: DirectorsService,\r\n    private actorService: ActorsService,\r\n    private fb: FormBuilder,\r\n    private convertDateService: ConvertDateService,\r\n    private token: TokenStorageService,\r\n    private showService: ShowsService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private checkIsTheatreDataAddedService: CheckIsTheatreDataAddeedService) {\r\n      this.theatreId = this.token.getTheatreId();\r\n    }\r\n\r\n  titlePattern = \"^[A-Z0-9][a-zA-Z0-9 ]+$\";\r\n  namePattern = \"^[A-Z][a-zA-Z ]+$\";\r\n  durationPattern =\"^[1-9][0-9]+$\"\r\n\r\n  ngOnInit() {\r\n    this.categoryService.getCategoryList()\r\n      .subscribe(categories => {\r\n        this.categoryListing = categories\r\n      });\r\n\r\n    this.sceneService.getSceneListFilteredByTheatre()\r\n      .subscribe(scenes => {\r\n        this.sceneListing = scenes\r\n      });\r\n\r\n    this.directorService.getDirectorsList()\r\n      .subscribe(directors => {\r\n        this.directorListing = directors\r\n      });\r\n\r\n    this.actorService.getActorsList()\r\n      .subscribe(actors => {\r\n        this.actorListing = actors\r\n      });\r\n\r\n\r\n    this.showForm = this.fb.group({\r\n      id: 0,\r\n      title: ['', [Validators.required, Validators.pattern(this.titlePattern)]],\r\n      sceneId: ['', Validators.required],\r\n      categoryId: ['', Validators.required],\r\n      showDescription: ['', Validators.required],\r\n      duration: ['', [Validators.required, Validators.pattern(this.durationPattern)]],\r\n      premiereDate: ['', Validators.required],\r\n      writer: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      directorId: ['', Validators.required],\r\n      actorShowDtos: this.fb.array([this.initialActorRows()])\r\n    });\r\n  }\r\n\r\n  initialActorRows(){\r\n    return this.fb.group({\r\n      actorId: ['', Validators.required],\r\n      actorRoleName: ['', Validators.required],\r\n      actorRoleDescription: ['']\r\n    });\r\n  }\r\n\r\n  get formArr(){\r\n    return this.showForm.get('actorShowDtos') as FormArray;\r\n  }\r\n\r\n  get actorControls(){\r\n    return this.showForm.controls.actorShowDtos['controls'];\r\n  }\r\n\r\n  addNewActor(){\r\n    this.formArr.push(this.initialActorRows());\r\n  }\r\n\r\n  deleteActorRow(index: number){\r\n    this.formArr.removeAt(index);\r\n  }\r\n\r\n  //Getter methods to access formControls\r\n  get title() { return this.showForm.get('title'); }\r\n  get categoryId() { return this.showForm.get('categoryId'); }\r\n  get sceneId() { return this.showForm.get('sceneId'); }\r\n  get duration() { return this.showForm.get('duration'); }\r\n  get premiereDate() { return this.showForm.get('premiereDate'); }\r\n  get showDescription() { return this.showForm.get('showDescription'); }\r\n  get writer() { return this.showForm.get('writer'); }\r\n  get directorId() { return this.showForm.get('directorId'); }\r\n  get actorShowDtos() { return this.showForm.get('actorShowDtos')}\r\n\r\n\tonSelect(event) {\r\n\t\tthis.files.push(...event.addedFiles);\r\n  }\r\n\r\n\tonRemove(event) {\r\n\t\tthis.files.splice(this.files.indexOf(event), 1);\r\n\t}\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n    this.filesLength = this.files.length;\r\n    \r\n    if(this.filesLength == 0)\r\n      return false;\r\n\r\n    if(this.filesLength > 0 && this.filesLength < 3){\r\n      this.filesValidation = true;\r\n      return false;\r\n    }\r\n\r\n    if (!this.showForm.valid) {\r\n      return false;\r\n    }\r\n     \r\n    var showDate = this.showForm.get('premiereDate').value;\r\n    var showDateTime = this.convertDateService.convertDate(showDate);\r\n    \r\n    const formData = new FormData();\r\n\r\n    formData.append('title', this.showForm.get('title').value);\r\n    formData.append('description', this.showForm.get('showDescription').value);\r\n    formData.append('duration', this.showForm.get('duration').value);\r\n    formData.append('contentAdvisory', 'False');\r\n    formData.append('premiereDate', showDateTime);\r\n    formData.append('categoryId', this.showForm.get('categoryId').value);\r\n    formData.append('writer', this.showForm.get('writer').value);\r\n    formData.append('directorId', this.showForm.get('directorId').value);\r\n    formData.append('theatreId', this.theatreId);\r\n    formData.append('sceneId', this.showForm.get('sceneId').value);\r\n\r\n    const actors = this.showForm.get('actorShowDtos').value;\r\n\r\n    for(let i = 0; i < actors.length; i++){\r\n      formData.append('actorShowDtos[' + i + '][actorId]', actors[i].actorId);\r\n      formData.append('actorShowDtos[' + i + '][actorRoleName]', actors[i].actorRoleName);\r\n      formData.append('actorShowDtos[' + i + '][actorRoleDescription]', actors[i].actorRoleDescription);\r\n    }\r\n\r\n    for(var i=0; i<this.files.length; i++){\r\n      formData.append(\"showImages\", this.files[i]);\r\n    }\r\n\r\n    // new Response(formData).text().then(console.log);\r\n\r\n    this.showService.addShow(formData)\r\n      .subscribe(() =>{\r\n        this.alertify.success(\"Sucessfully added.\"),\r\n        this.checkIsTheatreDataAddedService.changeShowAddedStatus(true);\r\n        this.router.navigate(['/admin-theatre/shows/all-shows']);\r\n      }, err => {\r\n        this.alertify.error(err)\r\n      });\r\n    }\r\n  }\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Add New Show</h3>\r\n          </div>\r\n          <!-- Title -->\r\n          <form [formGroup]=\"showForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"title\">Title: </label>\r\n                  <input type=\"text\" placeholder=\"Title\" formControlName=\"title\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"title.invalid && (title.dirty || title.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"title.errors.required\">\r\n                      Title is required.\r\n                    </span>\r\n                    <span *ngIf=\"title.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Scene -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <label for=\"sceneId\">Scene: </label>\r\n                <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"sceneId\"\r\n                  aria-placeholder=\"Scene\">\r\n                  <option value=\"\" disabled>Select scene</option>\r\n                  <option *ngFor=\"let scene of sceneListing\" [value]=\"scene.id\">\r\n                    {{ scene.sceneName }}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"isSubmitted && sceneId.errors?.required\" class=\"text-warning small\">\r\n                  Scene is required.\r\n                </div>\r\n              </div>\r\n              <!-- Category -->\r\n              <div class=\"col-md-6\">\r\n                <label for=\"categoryId\">Category: </label>\r\n                <select formControlName=\"categoryId\" class=\"custom-select form-control-alternative mb-1\"\r\n                  aria-placeholder=\"Category\">\r\n                  <option value=\"\" disabled>Select category</option>\r\n                  <option *ngFor=\"let category of categoryListing\" [value]=\"category.id\">\r\n                    {{ category.categoryName }}\r\n                  </option>\r\n                </select>\r\n                <div *ngIf=\"isSubmitted && categoryId.errors?.required\" class=\"text-warning small\">\r\n                  Category is required.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Duration -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"duration\">Duration (in minutes): </label>\r\n                  <input type=\"text\" placeholder=\"Duration (in minutes)\" formControlName=\"duration\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"duration.invalid && (duration.dirty || duration.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"duration.errors.required\">\r\n                      Duration is required.\r\n                    </span>\r\n                    <span *ngIf=\"duration.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Premiere Date -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"premiereDate\">Premiere Date: </label>\r\n                  <input type=\"date\" placeholder=\"Premiere Date\" formControlName=\"premiereDate\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"premiereDate.invalid && (premiereDate.dirty || premiereDate.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"premiereDate.errors.required\">\r\n                      Premiere date is required.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Description -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"showDescription\">Description: </label>\r\n                  <textarea class=\"form-control form-control-alternative\" formControlName=\"showDescription\"\r\n                    placeholder=\"Description\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                  <div\r\n                    *ngIf=\"showDescription.invalid && (showDescription.dirty || showDescription.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"showDescription.errors.required\">\r\n                      Show description is required.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Director -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <label for=\"directorId\">Director: </label>\r\n                <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"directorId\"\r\n                  aria-placeholder=\"Director\">\r\n                  <option value=\"\" disabled>Select Director</option>\r\n                  <option *ngFor=\"let director of directorListing\" [value]=\"director.id\">\r\n                    {{ director.firstName}} {{ director.lastName }}</option>\r\n                </select>\r\n                <div *ngIf=\"isSubmitted && directorId.errors?.required\" class=\"text-warning small\">\r\n                  Director is required.\r\n                </div>\r\n              </div>\r\n              <!-- Writer -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"writer\">Writer: </label>\r\n                  <input type=\"text\" formControlName=\"writer\" placeholder=\"Writer\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"writer.invalid && (writer.dirty || writer.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"writer.errors.required\">\r\n                      Writer is required.\r\n                    </span>\r\n                    <span *ngIf=\"writer.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Actor -->\r\n            <div formArrayName=\"actorShowDtos\" *ngFor=\"let actorRow of actorControls; let i= index\">\r\n              <div class=\"row with-forms\" [formGroupName]='i'>\r\n                <div class=\"col-md-6\">\r\n                  <label for=\"actorId\">Actor: </label>\r\n                  <select class=\"custom-select form-control-alternative mb-1\" formControlName=\"actorId\"\r\n                    aria-placeholder=\"Actor\">\r\n                    <option value=\"\" disabled>Select Actor</option>\r\n                    <option *ngFor=\"let actor of actorListing\" [value]=\"actor.id\">\r\n                      {{ actor.firstName }} {{ actor.lastName }}\r\n                    </option>\r\n                  </select>\r\n                  <div *ngIf=\"isSubmitted && actorControls[i].get('actorId').hasError('required')\"\r\n                    class=\"text-warning small\">\r\n                    Actor is required.\r\n                  </div>\r\n                </div>\r\n                <!-- Role name -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"actorRoleName\">Role Name: </label>\r\n                    <input type=\"text\" formControlName=\"actorRoleName\" placeholder=\"Role Name\"\r\n                      class=\"form-control form-control-alternative\">\r\n                    <div *ngIf=\"isSubmitted && actorControls[i].get('actorRoleName').hasError('required')\"\r\n                      class=\"text-warning small\">\r\n                      Role name is required.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!-- Role Description -->\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"actorRoleDescription\">Role Description: </label>\r\n                    <input type=\"text\" formControlName=\"actorRoleDescription\" placeholder=\"Role Description\"\r\n                      class=\"form-control form-control-alternative\">\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <label for=\"\">Add More Actors: </label><br>\r\n                  <button type=\"button\" (click)=\"addNewActor()\" [disabled]=\"actorShowDtos.invalid\"\r\n                    class=\"btn btn-sm btn-primary text-white\">\r\n                    Add another actor <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                  <button *ngIf=\"actorControls.length > 1\" (click)=\"deleteActorRow(i)\"\r\n                    class=\"btn btn-sm btn-danger text-white\">\r\n                    <i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Images -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <label for=\"f\">Show Images: </label>\r\n                <div class=\"custom-dropzone\" ngx-dropzone [accept]=\"'image/*'\" (change)=\"onSelect($event)\">\r\n                  <ngx-dropzone-label>\r\n                    <div>\r\n                      <p>Upload show images</p>\r\n                    </div>\r\n                  </ngx-dropzone-label>\r\n                  <ngx-dropzone-image-preview ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of files\" [file]=\"f\"\r\n                    [removable]=\"true\" (removed)=\"onRemove(f)\">\r\n                    <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                  </ngx-dropzone-image-preview>\r\n                </div>\r\n                <div *ngIf=\"isSubmitted && files.length == 0\" class=\"text-warning small\">\r\n                  Images are required.\r\n                </div>\r\n                <div *ngIf=\"filesValidation\" class=\"text-warning small\">\r\n                  Please upload at least 3 images.\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/shows/all-shows']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { IShowData } from 'src/app/shared/interfaces/IShowData';\nimport { ShowsService } from '../shows.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AllShowsResolverService implements Resolve<IShowData> {\n\nconstructor(private showService: ShowsService) { }\n  resolve(route: ActivatedRouteSnapshot): Observable<IShowData> {\n    return this.showService.getShowsFilteredByTheatre();\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IMG_BASE_URL } from 'src/app/app.constants';\r\nimport { ShowBaseDetails } from 'src/app/shows/ShowBaseDetails.model';\r\nimport { ShowsService } from '../shows.service';\r\nimport { SidebarLayoutTwoComponent } from '../../../listing/SidebarLayoutTwo/SidebarLayoutTwo.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IShowData } from 'src/app/shared/interfaces/IShowData';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { CheckIsTheatreDataAddeedService } from 'src/app/shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-all-shows',\r\n  templateUrl: './all-shows.component.html',\r\n  styleUrls: ['./all-shows.component.scss']\r\n})\r\nexport class AllShowsComponent implements OnInit {\r\n\r\n  shows: ShowBaseDetails[];\r\n  readonly IMG_BASE_URL = IMG_BASE_URL;\r\n  \r\n  totalCount: number;\r\n  itemsPerPage: any;\r\n  currentPage: number = 1;\r\n  totalItems: any;\r\n\r\n  p: number = 1;\r\n  size: number = 4;\r\n  pageSizes: Array<number> = [4, 8, 12];\r\n\r\n  @ViewChild(SidebarLayoutTwoComponent) searchItem;\r\n  @ViewChild(SidebarLayoutTwoComponent) sortItems;\r\n\r\n  searchShow: string;\r\n  sortShows: string;\r\n\r\n  showId: number;\r\n\r\n  constructor(private showService: ShowsService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private alertify: AlertifyService,\r\n    private checkIsTheatreDataAddedService: CheckIsTheatreDataAddeedService) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.subscribe((data: {showList: IShowData}) => {\r\n      this.shows = data.showList.data,\r\n      this.totalCount = data.showList.totalCount\r\n    });\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.size = event.target.value;\r\n  \r\n    this.showService.getShowsFilteredByTheatre(this.size, this.p, this.searchShow, this.sortShows)\r\n    .subscribe(data => {\r\n      if(data.data.length == 0){\r\n        this.showService.getShowsFilteredByTheatre(this.size, this.p = 1, this.searchShow, this.sortShows)\r\n          .subscribe(data => {\r\n            this.shows = data.data,\r\n            this.totalCount = data.totalCount\r\n          })\r\n      }\r\n      this.shows = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  handlePageChange(event) {\r\n    this.p = event;\r\n    this.showService.getShowsFilteredByTheatre(this.size, this.p, this.searchShow, this.sortShows)\r\n    .subscribe(data => {\r\n      this.shows = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSearchItems(searchTerm: string) : void {\r\n    this.searchShow = searchTerm;\r\n\r\n    this.showService.getShowsFilteredByTheatre(this.size, this.p = 1, this.searchShow, this.sortShows)\r\n    .subscribe(data => {\r\n      this.shows = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onSortItems(sortOrder: string) : void{\r\n    this.sortShows = sortOrder;\r\n\r\n    this.showService.getShowsFilteredByTheatre(this.size, this.p = 1, this.searchShow, this.sortShows)\r\n    .subscribe(data => {\r\n      this.shows = data.data,\r\n      this.totalCount = data.totalCount\r\n    })\r\n  }\r\n\r\n  onResetItems(value){\r\n    if(value == true){\r\n      this.showService.getShowsFilteredByTheatre(this.size, 1, '', '')\r\n      .subscribe(data => {\r\n        this.shows = data.data,\r\n        this.totalCount = data.totalCount\r\n      })\r\n    }\r\n  }\r\n\r\n  setId(showId){\r\n    this.showId = showId\r\n  }\r\n\r\n  deleteShow(){\r\n    this.showService.deleteShow(this.showId)\r\n    .subscribe(() =>{\r\n      let index = this.shows.findIndex(x => x.id === this.showId); //find index in array\r\n      this.shows.splice(index, 1);//remove element from array\r\n      if(this.shows.length == 0){\r\n        this.checkIsTheatreDataAddedService.changeShowAddedStatus(false);\r\n      }\r\n      this.alertify.success(\"Successfully deleted\")\r\n    }, err => {\r\n        this.alertify.error('Something went wrong')\r\n      });\r\n  }\r\n\r\n  popoverTitle = 'Be careful!';\r\n  popoverMessage = 'Are you sure you want to delete this show?';\r\n  confirmClicked = false;\r\n  cancelClicked = false;\r\n  confirmText = 'Yes';\r\n  cancelText = 'No';\r\n}\r\n\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row responsive-row\">\r\n    <!-- Sidebar -->\r\n    <div class=\"col-lg-12 col-md-4\">\r\n      <sidebar-layout-two (searchItem)=\"onSearchItems($event)\" (sortItems)=\"onSortItems($event)\"\r\n        (resetItems)=\"onResetItems($event)\"></sidebar-layout-two>\r\n    </div>\r\n    <!-- Sidebar / End -->\r\n\r\n    <!-- Listings -->\r\n    <div class=\"col-lg-12 col-md-12\">\r\n      <div class=\"card\">\r\n        <div class=\"db-tile\">\r\n          <h4>Shows <a [routerLink]=\"['/admin-theatre/shows/add-show']\"\r\n              class=\"btn btn-sm btn-primary text-white float-sm-right\">\r\n              <i class=\"sl sl-icon-plus\"></i>+ Add new item</a>\r\n          </h4>\r\n        </div>\r\n        <div class=\"dashboard-list-box table-responsive invoices with-icons\" *ngIf=\"shows.length > 0;\">\r\n          <table class=\"table table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Image</th>\r\n                <th>Show</th>\r\n                <th>Category</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr class=\"col-sm-6 col-md-6 col-lg-6\" *ngFor=\"let show of shows | paginate: \r\n        {\r\n           itemsPerPage: size,\r\n           currentPage: p,\r\n           totalItems: totalCount \r\n        }; \r\n        let i = index\">\r\n                <td>{{ size*(p-1)+i+1 }}</td>\r\n                <td> <img class=\"img-fluid rounded shadow-lg\" src=\"{{IMG_BASE_URL}}{{show.showImageDtos[0].path}}\"\r\n                    alt=\"{{show.showImageDtos[0].alt}}\" width=\"80\" height=\"80\"></td>\r\n                <td><a [routerLink]=\"['/shows/about-show', show.id]\">{{ show.title }}</a></td>\r\n                <td>{{ show.categoryName }}</td>\r\n                <td>\r\n                  <a [routerLink]=\"['/admin-theatre/shows/edit-show', show.id]\"\r\n                    class=\"btn btn-sm btn-primary text-white\"><i class=\"sl sl-icon-note\"></i> Edit</a>\r\n                  <button class=\"btn btn-sm btn-danger text-white\" mwlConfirmationPopover [popoverTitle]=\"popoverTitle\"\r\n                    [popoverMessage]=\"popoverMessage\" [confirmText]=\"confirmText\" [cancelText]=\"cancelText\"\r\n                    [placement]=\"placement\" (confirm)=\"deleteShow();\" (cancel)=\"cancelClicked = true\"\r\n                    confirmButtonType=\"danger btn-sm\" cancelButtonType=\"outline-secondary btn-sm\"\r\n                    (click)=\"setId(show.id); cancelClicked = false\" [appendToBody]=\"true\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <br>\r\n      <div class=\"col-lg-9 col-md-8\" *ngIf=\"shows.length == 0;\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-md-12 grid-layout-list\">\r\n            No results found.\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-12 col-md-12\" *ngIf=\"shows.length > 0\">\r\n        <div class=\"row\">\r\n          <!-- Pagination -->\r\n          <div class=\"col-lg-6 col-md-6\">\r\n            <pagination-controls (pageChange)=\"handlePageChange($event)\" previousLabel=\"Prev\" nextLabel=\"Next\"\r\n              responsive=\"true\" directionLinks=\"true\"></pagination-controls>\r\n          </div>\r\n          <!-- Pagination / End -->\r\n          <!-- Items per page -->\r\n          <div class=\"col-lg-6 col-md-6 text-right\">\r\n            Items per Page:\r\n            <select (change)=\"handlePageSizeChange($event)\">\r\n              <option *ngFor=\"let size of pageSizes\" value=\"{{ size }}\">\r\n                {{ size }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          <!-- Items per page / End -->\r\n        </div>\r\n      </div>\r\n      <!-- Listings / End -->\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActorBaseDetails } from 'src/app/actors/ActorBaseDetails.model';\r\nimport { ActorsService } from 'src/app/actors/actors.service';\r\nimport { DirectorBaseDetails } from 'src/app/directors/DirectorBaseDetails.model';\r\nimport { DirectorsService } from 'src/app/directors/directors.service';\r\nimport { CategoriesService } from 'src/app/globalFrontendComponents/Categories/Categories.service';\r\nimport { Category } from 'src/app/globalFrontendComponents/Categories/Category.model';\r\nimport { SceneBaseInfo } from '../../scenes/sceneBaseInfo.model';\r\nimport { ScenesService } from '../../scenes/scenes.service';\r\nimport { ConvertDateService } from '../../../shared/services/convert-date.service';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { ShowsService } from '../shows.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Show } from '../show.model';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-show',\r\n  templateUrl: './edit-show.component.html',\r\n  styleUrls: ['./edit-show.component.scss']\r\n})\r\nexport class EditShowComponent implements OnInit {\r\n\r\n  categoryListing: Category[];\r\n  sceneListing: SceneBaseInfo[];\r\n  directorListing: DirectorBaseDetails[];\r\n  actorListing: ActorBaseDetails[];\r\n\r\n  showForm: FormGroup;\r\n  isSubmitted = false;\r\n  files: File[] = [];\r\n  filesLength: number;\r\n  filesValidation: boolean = false;\r\n\r\n  theatreId: any;\r\n  showId: any;\r\n  \r\n  constructor(private categoryService: CategoriesService,\r\n    private sceneService: ScenesService,\r\n    private directorService: DirectorsService,\r\n    private actorService: ActorsService,\r\n    private fb: FormBuilder,\r\n    private convertDateService: ConvertDateService,\r\n    private token: TokenStorageService,\r\n    private showService: ShowsService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private convertDate: ConvertDateService,\r\n    private alertify: AlertifyService) {\r\n      this.theatreId = this.token.getTheatreId();\r\n    }\r\n\r\n  titlePattern = \"^[A-Z0-9][a-zA-Z0-9 ]+$\";\r\n  namePattern = \"^[A-Z][a-zA-Z ]+$\";\r\n  durationPattern =\"^[1-9][0-9]+$\"\r\n\r\n  ngOnInit() {\r\n    this.categoryService.getCategoryList()\r\n      .subscribe(categories => {\r\n        this.categoryListing = categories\r\n      });\r\n\r\n    this.sceneService.getSceneListFilteredByTheatre()\r\n      .subscribe(scenes => {\r\n        this.sceneListing = scenes\r\n      });\r\n\r\n    this.directorService.getDirectorsList()\r\n      .subscribe(directors => {\r\n        this.directorListing = directors\r\n      });\r\n\r\n    this.actorService.getActorsList()\r\n      .subscribe(actors => {\r\n        this.actorListing = actors\r\n      });\r\n\r\n\r\n    this.showForm = this.createShowForm();\r\n\r\n    this.showId = this.activatedRoute.snapshot.params['id'];\r\n    this.showService.getShow(this.showId)\r\n      .subscribe((show: Show) => {\r\n        this.editShow(show)\r\n      });\r\n  }\r\n\r\n  editShow(show){\r\n    this.showForm.patchValue({\r\n      title: show.title,\r\n      categoryId: show.categoryId,\r\n      showDescription: show.description,\r\n      theatreId: show.theatreId,\r\n      sceneId: show.sceneId,\r\n      duration: show.duration,\r\n      premiereDate: this.convertDate.formatPremiereDate(new Date(show.premiereDate)),\r\n      writer: show.writer,\r\n      directorId: show.directorId\r\n    }),\r\n    this.showForm.setControl('actorShowDtos', this.setExistingActors(show.actorShowDtos));\r\n  }\r\n\r\n  setExistingActors(actorsSet) : FormArray {\r\n    const actorFormArray = new FormArray([]);\r\n      actorsSet.forEach(a => {\r\n        actorFormArray.push(this.fb.group({\r\n          actorId: a.actorId,\r\n          actorFirstName: a.actorFirstName,\r\n          actorLastName: a.actorLastName,\r\n          actorRoleName: a.actorRoleName,\r\n          actorRoleDescription: a.actorRoleDescription\r\n        }))\r\n      });\r\n    return actorFormArray; \r\n  }\r\n\r\n\r\n  createShowForm() : FormGroup {\r\n    return this.fb.group({\r\n      id: 0,\r\n      title: ['', [Validators.required, Validators.pattern(this.titlePattern)]],\r\n      sceneId: ['', Validators.required],\r\n      categoryId: ['', Validators.required],\r\n      showDescription: ['', Validators.required],\r\n      duration: ['', [Validators.required, Validators.pattern(this.durationPattern)]],\r\n      premiereDate: ['', Validators.required],\r\n      writer: ['', [Validators.required, Validators.pattern(this.namePattern)]],\r\n      directorId: ['', Validators.required],\r\n      actorShowDtos: this.fb.array([this.initialActorRows()])\r\n    });\r\n  }\r\n\r\n  initialActorRows(){\r\n    return this.fb.group({\r\n      actorId: ['', Validators.required],\r\n      actorRoleName: ['', Validators.required],\r\n      actorRoleDescription: ['']\r\n    });\r\n  }\r\n\r\n  get formArr(){\r\n    return this.showForm.get('actorShowDtos') as FormArray;\r\n  }\r\n\r\n  get actorControls(){\r\n    return this.showForm.controls.actorShowDtos['controls'];\r\n  }\r\n\r\n  addNewActor(){\r\n    this.formArr.push(this.initialActorRows());\r\n  }\r\n\r\n  deleteActorRow(index: number){\r\n    this.formArr.removeAt(index);\r\n  }\r\n\r\n  //Getter methods to access formControls\r\n  get title() { return this.showForm.get('title'); }\r\n  get categoryId() { return this.showForm.get('categoryId'); }\r\n  get sceneId() { return this.showForm.get('sceneId'); }\r\n  get duration() { return this.showForm.get('duration'); }\r\n  get premiereDate() { return this.showForm.get('premiereDate'); }\r\n  get showDescription() { return this.showForm.get('showDescription'); }\r\n  get writer() { return this.showForm.get('writer'); }\r\n  get directorId() { return this.showForm.get('directorId'); }\r\n  get actorShowDtos() { return this.showForm.get('actorShowDtos')}\r\n\r\n\tonSelect(event) {\r\n\t\tthis.files.push(...event.addedFiles);\r\n  }\r\n\r\n\tonRemove(event) {\r\n\t\tthis.files.splice(this.files.indexOf(event), 1);\r\n\t}\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n\r\n    if (!this.showForm.valid) {\r\n      return false;\r\n    }\r\n     \r\n    var showDate = this.showForm.get('premiereDate').value;\r\n    var showDateTime = this.convertDateService.convertDate(showDate);\r\n    \r\n    const formData = new FormData();\r\n\r\n    formData.append('title', this.showForm.get('title').value);\r\n    formData.append('description', this.showForm.get('showDescription').value);\r\n    formData.append('duration', this.showForm.get('duration').value);\r\n    formData.append('contentAdvisory', 'False');\r\n    formData.append('premiereDate', showDateTime);\r\n    formData.append('categoryId', this.showForm.get('categoryId').value);\r\n    formData.append('writer', this.showForm.get('writer').value);\r\n    formData.append('directorId', this.showForm.get('directorId').value);\r\n    formData.append('theatreId', this.theatreId);\r\n    formData.append('sceneId', this.showForm.get('sceneId').value);\r\n\r\n    const actors = this.showForm.get('actorShowDtos').value;\r\n\r\n    for(let i = 0; i < actors.length; i++){\r\n      formData.append('actorShowDtos[' + i + '][actorId]', actors[i].actorId);\r\n      formData.append('actorShowDtos[' + i + '][actorRoleName]', actors[i].actorRoleName);\r\n      formData.append('actorShowDtos[' + i + '][actorRoleDescription]', actors[i].actorRoleDescription);\r\n    }\r\n\r\n    for(var i=0; i<this.files.length; i++){\r\n      formData.append(\"showImages\", this.files[i]);\r\n    }\r\n\r\n    // new Response(formData).text().then(console.log);\r\n\r\n    this.showService.editShow(this.showId, formData)\r\n      .subscribe(() => {\r\n        this.alertify.success('Succesfully edited');\r\n        this.router.navigate(['/admin-theatre/shows/all-shows']);\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      })\r\n    }\r\n\r\n}\r\n","<div class=\"dashboard-content\">\n  <div class=\"row\">\n    <div class=\"col-lg-12\">\n      <div id=\"add-listing\">\n        <!-- Section -->\n        <div class=\"add-listing-section mb-4\">\n          <!-- Headline -->\n          <div class=\"add-listing-headline\">\n            <h3> Edit Show</h3>\n          </div>\n          <!-- Title -->\n          <form [formGroup]=\"showForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row with-forms\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <label for=\"title\">Title: </label>\n                  <input type=\"text\" placeholder=\"Title\" formControlName=\"title\"\n                    class=\"form-control form-control-alternative\">\n                  <span *ngIf=\"title.invalid && (title.dirty || title.touched || isSubmitted)\"\n                    class=\"text-warning small\">\n                    <span *ngIf=\"title.errors.required\">\n                      Title is required.\n                    </span>\n                    <span *ngIf=\"title.errors.pattern\">\n                      Wrong format.\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            <!-- Scene -->\n            <div class=\"row with-forms\">\n              <div class=\"col-md-6\">\n                <label for=\"sceneId\">Scene: </label>\n                <select class=\"custom-select form-control-alternative mb-3\" formControlName=\"sceneId\"\n                  aria-placeholder=\"Scene\">\n                  <option value=\"\" disabled>Select scene</option>\n                  <option *ngFor=\"let scene of sceneListing\" [value]=\"scene.id\">\n                    {{ scene.sceneName }}\n                  </option>\n                </select>\n                <div *ngIf=\"isSubmitted && sceneId.errors?.required\" class=\"text-warning small\">\n                  Scene is required.\n                </div>\n              </div>\n              <!-- Category -->\n              <div class=\"col-md-6\">\n                <label for=\"categoryId\">Category: </label>\n                <select formControlName=\"categoryId\" class=\"custom-select form-control-alternative mb-3\"\n                  aria-placeholder=\"Category\">\n                  <option value=\"\" disabled>Select category</option>\n                  <option *ngFor=\"let category of categoryListing\" [value]=\"category.id\">\n                    {{ category.categoryName }}\n                  </option>\n                </select>\n                <div *ngIf=\"isSubmitted && categoryId.errors?.required\" class=\"text-warning small\">\n                  Category is required.\n                </div>\n              </div>\n            </div>\n            <!-- Duration -->\n            <div class=\"row with-forms\">\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label for=\"duration\">Duration (in minutes): </label>\n                  <input type=\"text\" placeholder=\"Duration (in minutes)\" formControlName=\"duration\"\n                    class=\"form-control form-control-alternative\">\n                  <div *ngIf=\"duration.invalid && (duration.dirty || duration.touched || isSubmitted)\"\n                    class=\"text-warning small\">\n                    <span *ngIf=\"duration.errors.required\">\n                      Duration is required.\n                    </span>\n                    <span *ngIf=\"duration.errors.pattern\">\n                      Wrong format.\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <!-- Premiere Date -->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label for=\"premiereDate\">Premiere Date: </label>\n                  <input type=\"date\" placeholder=\"Premiere Date\" formControlName=\"premiereDate\"\n                    class=\"form-control form-control-alternative\">\n                  <div *ngIf=\"premiereDate.invalid && (premiereDate.dirty || premiereDate.touched || isSubmitted)\"\n                    class=\"text-warning small\">\n                    <span *ngIf=\"premiereDate.errors.required\">\n                      Premiere date is required.\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- Description -->\n            <div class=\"row with-forms\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                  <label for=\"showDescription\">Description: </label>\n                  <textarea class=\"form-control form-control-alternative\" formControlName=\"showDescription\"\n                    placeholder=\"Description\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                  <div\n                    *ngIf=\"showDescription.invalid && (showDescription.dirty || showDescription.touched || isSubmitted)\"\n                    class=\"text-warning small\">\n                    <span *ngIf=\"showDescription.errors.required\">\n                      Show description is required.\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- Director -->\n            <div class=\"row with-forms\">\n              <div class=\"col-md-6\">\n                <label for=\"directorId\">Director: </label>\n                <select class=\"custom-select form-control-alternative mb-3\" formControlName=\"directorId\"\n                  aria-placeholder=\"Director\">\n                  <option value=\"\" disabled>Select Director</option>\n                  <option *ngFor=\"let director of directorListing\" [value]=\"director.id\">\n                    {{ director.firstName}} {{ director.lastName }}</option>\n                </select>\n                <div *ngIf=\"isSubmitted && directorId.errors?.required\" class=\"text-warning small\">\n                  Director is required.\n                </div>\n              </div>\n              <!-- Writer -->\n              <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                  <label for=\"writer\">Writer: </label>\n                  <input type=\"text\" formControlName=\"writer\" placeholder=\"Writer\"\n                    class=\"form-control form-control-alternative\">\n                  <div *ngIf=\"writer.invalid && (writer.dirty || writer.touched || isSubmitted)\"\n                    class=\"text-warning small\">\n                    <span *ngIf=\"writer.errors.required\">\n                      Writer is required.\n                    </span>\n                    <span *ngIf=\"writer.errors.pattern\">\n                      Wrong format.\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <!-- Actor -->\n            <div formArrayName=\"actorShowDtos\" *ngFor=\"let actorRow of actorControls; let i= index\">\n              <div class=\"row with-forms\" [formGroupName]='i'>\n                <div class=\"col-md-6\">\n                  <label for=\"actorId\">Actor: </label>\n                  <select class=\"custom-select form-control-alternative mb-3\" formControlName=\"actorId\"\n                    aria-placeholder=\"Actor\">\n                    <option value=\"\" disabled>Select Actor</option>\n                    <option *ngFor=\"let actor of actorListing\" [value]=\"actor.id\">\n                      {{ actor.firstName }} {{ actor.lastName }}\n                    </option>\n                  </select>\n                  <div *ngIf=\"isSubmitted && actorControls[i].get('actorId').hasError('required')\"\n                    class=\"text-warning small\">\n                    Actor is required.\n                  </div>\n                </div>\n                <!-- Role name -->\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label for=\"actorRoleName\">Role Name: </label>\n                    <input type=\"text\" formControlName=\"actorRoleName\" placeholder=\"Role Name\"\n                      class=\"form-control form-control-alternative\">\n                    <div *ngIf=\"isSubmitted && actorControls[i].get('actorRoleName').hasError('required')\"\n                      class=\"text-warning small\">\n                      Role name is required.\n                    </div>\n                  </div>\n                </div>\n                <!-- Role Description -->\n                <div class=\"col-md-6\">\n                  <div class=\"form-group\">\n                    <label for=\"actorRoleDescription\">Role Description: </label>\n                    <input type=\"text\" formControlName=\"actorRoleDescription\" placeholder=\"Role Description\"\n                      class=\"form-control form-control-alternative\">\n                  </div>\n                </div>\n                <div class=\"col-md-3\">\n                  <button type=\"button\" (click)=\"addNewActor()\" [disabled]=\"actorShowDtos.invalid\"\n                    class=\"btn btn-sm btn-primary text-white\">\n                    Add another actor <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n                <div class=\"col-md-3\">\n                  <button *ngIf=\"actorControls.length > 1\" (click)=\"deleteActorRow(i)\"\n                    class=\"btn btn-sm btn-danger text-white\">\n                    <i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <!-- Images -->\n            <div class=\"row with-forms\">\n              <div class=\"col-md-12\">\n                <label for=\"f\">Show Images: </label>\n                <div class=\"custom-dropzone\" ngx-dropzone [accept]=\"'image/*'\" (change)=\"onSelect($event)\">\n                  <ngx-dropzone-label>\n                    <div>\n                      <p>Upload show images</p>\n                    </div>\n                  </ngx-dropzone-label>\n                  <ngx-dropzone-image-preview ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of files\" [file]=\"f\"\n                    [removable]=\"true\" (removed)=\"onRemove(f)\">\n                    <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\n                  </ngx-dropzone-image-preview>\n                </div>\n              </div>\n            </div>\n            <div class=\"row with-forms\">\n              <div class=\"col-md-12\">\n                <div class=\"mt-3\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/shows/all-shows']\"\n                    class=\"btn button-outline\">Cancel</button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n        <!-- Section / End -->\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { ShowRoutes } from './shows.routing';\r\nimport { AddShowComponent } from './add-show/add-show.component';\r\nimport { AllShowsComponent } from './all-shows/all-shows.component';\r\nimport { EditShowComponent } from './edit-show/edit-show.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(ShowRoutes),\r\n    SharedModule,\r\n    NgxPaginationModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxDropzoneModule,\r\n    ConfirmationPopoverModule.forRoot({\r\n      confirmButtonType: 'danger'\r\n    })\r\n  ],\r\n  declarations: [\r\n    AddShowComponent,\r\n    AllShowsComponent,\r\n    EditShowComponent\r\n  ],\r\n  providers: []\r\n})\r\nexport class ShowsModule { }\r\n","import { Routes } from '@angular/router';\nimport { AllShowsComponent } from './all-shows/all-shows.component';\nimport { EditShowComponent } from './edit-show/edit-show.component';\nimport { AddShowComponent } from './add-show/add-show.component';\nimport { AllShowsResolverService } from './all-shows/all-shows-resolver.service';\n\nexport const ShowRoutes: Routes = [\n  {  \n    path: 'all-shows',\n    component: AllShowsComponent,\n    resolve: { showList: AllShowsResolverService }\n  },\n  {\n    path: 'add-show',\n    component: AddShowComponent\n  },\n  {\n    path: 'edit-show/:id',\n    component: EditShowComponent\n  }\n];\n","import { HttpClient, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { IShowData } from 'src/app/shared/interfaces/IShowData';\r\nimport { Show } from './show.model';\r\nimport { ShowListForRepertoire } from './showListForRepertoire.model';\r\nimport { ShowForRepertoire } from './showForRepertoire.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowsService {\r\n\r\nconstructor(private httpClient: HttpClient,\r\n  private token: TokenStorageService) { }\r\n\r\n  public API_URL = API_URL;\r\n  theatreId = this.token.getTheatreId();\r\n\r\naddShow(show) : Observable<Show>{\r\n  return this.httpClient.post<Show>(this.API_URL + '/shows', show)\r\n    .pipe(\r\n      map((show: Show) => show)\r\n    )\r\n  }\r\n\r\ngetShow(showId) : Observable<Show>{\r\n\r\n  let params = new HttpParams();\r\n  params = params.append('type', 'allInfo');\r\n\r\n  return this.httpClient.get<Show>(this.API_URL + '/shows/' + showId, { params })\r\n    .pipe(\r\n      map((show: Show) => show)\r\n    )\r\n  }\r\n\r\ngetShowsFilteredByTheatre(perPage: number = 4, pageNumber: number = 1, searchQuery: string = \"\", sortOrder: string = \"\") \r\n: Observable<IShowData>{\r\n  let params = new HttpParams();\r\n  params = params.append('perPage', String(perPage));\r\n  params = params.append('pageNumber', String(pageNumber));\r\n  params = params.append('searchQuery', String(searchQuery));\r\n  params = params.append('sortOrder', String(sortOrder));\r\n  params = params.append('Type', \"showsFilteredByTheatre\");\r\n  params = params.append('TheatreId', this.theatreId);\r\n\r\n  return this.httpClient.get<IShowData>(this.API_URL + '/shows', { params })\r\n    .pipe(\r\n      map((shows: IShowData) => shows)\r\n    )\r\n  }\r\n\r\ngetShowsForRepertoireFilteredByTheatre() : Observable<ShowListForRepertoire[]>{\r\n  let params = new HttpParams();\r\n  params = params.append('Type', 'showsForRepertoireFilteredByTheatre');\r\n  params = params.append('TheatreId', this.theatreId);\r\n\r\n  return this.httpClient.get<ShowListForRepertoire[]>(this.API_URL + '/shows', { params })\r\n    .pipe(\r\n      map((repertoires: ShowListForRepertoire[]) => repertoires)\r\n    )\r\n  }\r\n\r\ngetShowForRepertoire(showId: number) : Observable<ShowForRepertoire[]>{\r\n  let params = new HttpParams();\r\n  params = params.append('type', 'repertoire');\r\n\r\n  return this.httpClient.get<ShowForRepertoire[]>(this.API_URL + '/shows/' + showId, { params })\r\n    .pipe(\r\n      map((showForRepertoire: ShowForRepertoire[]) => showForRepertoire),\r\n      catchError(err => throwError(err))\r\n    )\r\n  }\r\n\r\neditShow(id: number, show) : Observable<void>{\r\n  return this.httpClient.put<void>(this.API_URL + '/shows/' + id, show)\r\n    .pipe(\r\n      map(show => show)\r\n    )\r\n  }\r\n\r\ndeleteShow(id: number) : Observable<void> {\r\n  return this.httpClient.delete<any>(this.API_URL + '/shows/' + id);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TokenStorageService } from 'src/app/authentication/tokenStorage.service';\r\nimport { AlertifyService } from 'src/app/shared/services/alertify.service';\r\nimport { TheatreBaseDetails } from 'src/app/theatres/TheatreBaseDetails.model';\r\nimport { TheatreService } from '../theatre.service';\r\nimport { CheckIsTheatreDataAddeedService } from '../../../shared/services/checkIsTheatreDataAddeed.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-theatre',\r\n  templateUrl: './edit-theatre.component.html',\r\n  styleUrls: ['./edit-theatre.component.scss']\r\n})\r\nexport class EditTheatreComponent implements OnInit {\r\n\r\n  theatreForm: FormGroup;\r\n  files: File[] = [];\r\n  filesLength: number;\r\n  filesValidation: boolean = false;\r\n\r\n  theatreId: any;\r\n  theatreName: string;\r\n  isSubmitted: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private token: TokenStorageService,\r\n    private theatreService: TheatreService,\r\n    private router: Router,\r\n    private alertify: AlertifyService,\r\n    private checkIsTheatreDataAddedService: CheckIsTheatreDataAddeedService) { \r\n      this.theatreId = this.token.getTheatreId();\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.theatreForm = this.createTheatreForm();\r\n\r\n    this.theatreService.getTheatre(this.theatreId)\r\n      .subscribe((theatre: TheatreBaseDetails) => {\r\n        this.theatreName = theatre.name,\r\n        this.editTheatre(theatre)\r\n      });\r\n  }\r\n\r\n  editTheatre(theatre){\r\n    this.theatreForm.patchValue({\r\n      name: theatre.name,\r\n      description: theatre.description,\r\n      email: theatre.email,\r\n      telephone: theatre.telephone,\r\n      workingHours: theatre.workingHours,\r\n      location: theatre.location\r\n    });\r\n  }\r\n\r\n  namePattern = \"^[A-Z0-9][a-zA-Z0-9 ]+$\";\r\n\r\n  createTheatreForm() : FormGroup {\r\n    return this.fb.group({\r\n      id: 0,\r\n      name: [{value: '', disabled: true}, [Validators.required, Validators.pattern(this.namePattern)]],\r\n      description: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      telephone: ['', Validators.required],\r\n      workingHours: ['', Validators.required],\r\n      location: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onSelect(event) {\r\n\t\tthis.files.push(...event.addedFiles);\r\n  }\r\n\r\n\tonRemove(event) {\r\n\t\tthis.files.splice(this.files.indexOf(event), 1);\r\n\t}\r\n\r\n  //Getter methods to access formControls\r\n  get name() { return this.theatreForm.get('name'); }\r\n  get email() { return this.theatreForm.get('email'); }\r\n  get telephone() { return this.theatreForm.get('telephone'); }\r\n  get description() { return this.theatreForm.get('description'); }\r\n  get workingHours() { return this.theatreForm.get('workingHours'); }\r\n  get location() { return this.theatreForm.get('location'); }\r\n\r\n  onSubmit(){\r\n    this.isSubmitted = true;\r\n\r\n    if (!this.theatreForm.valid) {\r\n      return false;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('name', this.theatreForm.get('name').value);\r\n    formData.append('description', this.theatreForm.get('description').value);\r\n    formData.append('email', this.theatreForm.get('email').value);\r\n    formData.append('telephone', this.theatreForm.get('telephone').value);\r\n    formData.append('workingHours', this.theatreForm.get('workingHours').value);\r\n    formData.append('location', this.theatreForm.get('location').value);\r\n    formData.append('isVisible', String(true));\r\n\r\n    for(var i=0; i<this.files.length; i++){\r\n      formData.append(\"theatreImage\", this.files[i]);\r\n    }\r\n\r\n    // new Response(formData).text().then(console.log);\r\n\r\n    this.theatreService.editTheatre(this.theatreId, formData)\r\n      .subscribe(() => {\r\n        this.alertify.success('Succesfully edited');\r\n        this.checkIsTheatreDataAddedService.changeTheatreVisibilityStatus(true);\r\n        this.router.navigate(['/admin-theatre/dashboard']);\r\n      },\r\n      err => {\r\n        this.alertify.error(err);\r\n      })\r\n    }\r\n\r\n}\r\n\r\n\r\n","<div class=\"dashboard-content\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <div id=\"add-listing\">\r\n        <!-- Section -->\r\n        <div class=\"add-listing-section mb-4\">\r\n          <!-- Headline -->\r\n          <div class=\"add-listing-headline\">\r\n            <h3> Theatre Profile</h3>\r\n          </div>\r\n          <!-- Theatre Name -->\r\n          <form [formGroup]=\"theatreForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"name\">Name: </label>\r\n                  <input type=\"text\" placeholder=\"Name\" formControlName=\"name\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <span *ngIf=\"name.invalid && (name.dirty || name.touched || isSubmitted)\" class=\"text-warning small\">\r\n                    <span *ngIf=\"name.errors.required\">\r\n                      Name is required.\r\n                    </span>\r\n                    <span *ngIf=\"name.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Email -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"email\">Email: </label>\r\n                  <input type=\"text\" formControlName=\"email\" placeholder=\"Email\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"email.invalid && (email.dirty || email.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"email.errors.required\">\r\n                      Email is required.\r\n                    </span>\r\n                    <span *ngIf=\"email.errors.email\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Telephone -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"telephone\">Telephone: </label>\r\n                  <input type=\"text\" formControlName=\"telephone\" placeholder=\"Telephone\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"telephone.invalid && (telephone.dirty || telephone.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"telephone.errors.required\">\r\n                      Telephone is required.\r\n                    </span>\r\n                    <span *ngIf=\"telephone.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Location -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"location\">Address: </label>\r\n                  <input type=\"text\" formControlName=\"location\" placeholder=\"Address\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"location.invalid && (location.dirty || location.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"location.errors.required\">\r\n                      Address is required.\r\n                    </span>\r\n                    <span *ngIf=\"location.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <!-- Working Hours -->\r\n              <div class=\"col-md-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"workingHours\">Working Hours: </label>\r\n                  <input type=\"text\" formControlName=\"workingHours\" placeholder=\"Working Hours\"\r\n                    class=\"form-control form-control-alternative\">\r\n                  <div *ngIf=\"workingHours.invalid && (workingHours.dirty || workingHours.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"workingHours.errors.required\">\r\n                      Working hours are required.\r\n                    </span>\r\n                    <span *ngIf=\"workingHours.errors.pattern\">\r\n                      Wrong format.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Description -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"description\">Description: </label>\r\n                  <textarea class=\"form-control form-control-alternative\" formControlName=\"description\"\r\n                    placeholder=\"description\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n                  <div *ngIf=\"description.invalid && (description.dirty || description.touched || isSubmitted)\"\r\n                    class=\"text-warning small\">\r\n                    <span *ngIf=\"description.errors.required\">\r\n                      Theatre description is required.\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- Images -->\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <label for=\"f\">Theatre Images: </label>\r\n                <div class=\"custom-dropzone\" ngx-dropzone [accept]=\"'image/*'\" (change)=\"onSelect($event)\">\r\n                  <ngx-dropzone-label>\r\n                    <div>\r\n                      <p>Upload theatre images</p>\r\n                    </div>\r\n                  </ngx-dropzone-label>\r\n                  <ngx-dropzone-image-preview ngProjectAs=\"ngx-dropzone-preview\" *ngFor=\"let f of files\" [file]=\"f\"\r\n                    [removable]=\"true\" (removed)=\"onRemove(f)\">\r\n                    <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\r\n                  </ngx-dropzone-image-preview>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row with-forms\">\r\n              <div class=\"col-md-12\">\r\n                <div class=\"mt-3\">\r\n                  <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                  <button type=\"button\" [routerLink]=\"['/admin-theatre/dashboard']\"\r\n                    class=\"btn button-outline\">Cancel</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <!-- Section / End -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\nimport { Theatre } from './theatre.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TheatreService {\r\n\r\nconstructor(private httpClient: HttpClient) { }\r\n\r\nprivate API_URL = API_URL;\r\n\r\ngetTheatre(theatreId) : Observable<Theatre>{\r\n\r\n  let params = new HttpParams();\r\n  params = params.append('type', 'baseInfo');\r\n\r\n  return this.httpClient.get<Theatre>(this.API_URL + '/theatres/' + theatreId, { params })\r\n    .pipe(\r\n      map((theatre: Theatre) => theatre)\r\n    )\r\n  }\r\n\r\neditTheatre(id: number, theatre) : Observable<void>{\r\n  return this.httpClient.put<void>(this.API_URL + '/theatres/' + id, theatre)\r\n    .pipe(\r\n      map(theatre => theatre)\r\n    )\r\n  } \r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { API_URL } from '../../app.constants';\nimport { HttpClient } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs';\nimport { Category } from './Category.model';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\nconstructor(private httpClient: HttpClient) { }\n\n  private readonly API_URL = API_URL;\n\n  getCategoryList() : Observable<Category[]>{\n    return this.httpClient.get<Category[]>(this.API_URL + '/categories')\n      .pipe(\n        map((category: Category[]) => category),\n        catchError(err => throwError(err))\n      )\n  }\n\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { API_URL } from 'src/app/app.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShowFollowersService {\r\n\r\n  readonly API_URL = API_URL;\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getShowFollowersFilteredByTheatre(theatreId) : Observable<number>{\r\n    let params = new HttpParams();\r\n    params = params.append('Type', 'showFollowersFilteredByTheatre');\r\n    params = params.append('TheatreId', theatreId);\r\n\r\n    return this.httpClient.get<number>(this.API_URL + '/showFollowers', { params })\r\n      .pipe(\r\n        map((followersNumber: number) => followersNumber)\r\n      )\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}